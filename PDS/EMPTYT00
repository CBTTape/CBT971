         TITLE 'BATCH PROGRAM TO TELL IF A DATASET IS EMPTY'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                                                                     *
*    PROGRAM :  EMPTYTST                                              *
*                                                                     *
*    FUNCTION:  FIND OUT IF A DATASET OR A PDS MEMBER IS EMPTY.       *
*                                                                     *
*    ACTION  :  RETURNS CODE = 0 IF DATASET IS NOT EMPTY.             *
*               RETURNS CODE = 4 IF DATASET IS EMPTY.                 *
*               JCL ERROR IF A SEQUENTIAL DATASET (DSORG=PS)          *
*                 DOES NOT EXIST.                                     *
*               RETURNS CODE = 8 IF PDS MEMBER DOES NOT EXIST.        *
*                 IT SHOWS THE S013-18 MESSAGE BUT BYPASSES IT.       *
*               RETURNS CODE = 12 UPON SERIOUS I/O ERROR.             *
*                                                                     *
*    SEE BELOW FOR FURTHER DOCUMENTATION.                             *
*                                                                     *
*    DATE WRITTEN:   JANUARY 21 2018                                  *
*                                                                     *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                        HOW IT WORKS:                                *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* READ THE FIRST RECORD OF THE DATA SET, PDS MEMBER, OR PDSE MEMBER   *
* THAT IS ALLOCATED TO DDNAME SYSUT1.                                 *
* IF THE READ IS SUCCESSFUL, EXIT WITH RETURN CODE 0.                 *
* IF THE READ HITS END-OF-FILE, EXIT WITH RETURN CODE 4,              *
* WHICH MEANS THE DATA SET OR MEMBER IS EMPTY.                        *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* IF SYSPRINT IS ALLOCATED, A MESSAGE IS WRITTEN TO SYSPRINT.         *
* OTHER POSSIBLE RETURN CODES ARE 12 FOR MISSING SYSUT1 DDNAME        *
* OR 8 FOR MEMBER DOES NOT EXIST.                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                                                                     *
* SAMPLE JCL :                                                        *
*                 //EXEC PGM=EMPTYTST                                 *
*                 //SYSPRINT DD SYSOUT=*                              *
*                 //SYSUT1 DD DSN=A.B.C,DISP=SHR                      *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*         OPTIONS IN THE PARM FIELD.   PARM = W Q C                   *
*                                                                     *
* THE PARM FIELD IS CHECKED FOR THE PRESENCE OF CERTAIN CHARACTERS    *
* WHICH ALLOW OPTIONS TO BE SPECIFIED.                                *
* IF MORE THAN ONE OPTION IS USED, THE CHARACTERS DO NOT NEED TO      *
* BE SEPARATED, OR IN ANY SPECIFIC ORDER.                             *
* IF THE PARM FIELD CONTAINS THE CHARACTER "W" THEN THE PROGRAM       *
* WILL ISSUE A WTO WITH ONE OF THESE MESSAGES:                        *
*                                                                     *
*   EMP000I EMPTYTST - RC = 00 <DSN> ON VOLUME <VOL> IS NOT EMPTY     *
*   EMP004I EMPTYTST - RC = 04 <DSN> ON VOLUME <VOL> IS EMPTY         *
*   EMP008I EMPTYTST - RC = 08 <DSN> ON VOLUME <VOL> WAS NOT FOUND    *
*   EMP012I EMPTYTST - RC = 12 ERROR OCCURRED - SYSUT1 MISSING        *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* IF THE PARM FIELD CONTAINS THE LETTER "W" AND THE LETTER "C"        *
* (FOR CONDITIONAL) THEN IT WILL ISSUE A WTO ONLY IF THE RETURN       *
* CODE IS NOT ZERO.                                                   *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* IF THE PARM FIELD CONTAINS THE LETTER "Q" (FOR QUIET)               *
* THEN THE PROGRAM WILL NOT OPEN SYSPRINT EVEN IF IT IS ALLOCATED.    *
* THIS IS INTENDED FOR RUNNING THE PROGRAM UNDER TSO WHEN A USER      *
* PREFERS NOT TO SEE A MESSAGE EVEN THOUGH SYSPRINT MIGHT BE          *
* ALLOCATED TO THE TERMINAL.                                          *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* DDNAME SYSPRINT IS OPTIONAL                                         *
* EVEN IF DDNAME SYSPRINT IS ALLOCATED, THE PROGRAM WILL NOT          *
* OPEN IT OR WRITE TO IT IF PARM=Q IS SPECIFIED.                      *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                                                                     *
* USAGE NOTE:                                                         *
*                                                                     *
* PRIOR TO Z/OS 1.11 WHEN A PS DATA SET THAT WAS NOT SMS-MANAGED WAS  *
* FIRST CREATED, NO END-OF-FILE MARK WAS WRITTEN AT THE BEGINNING     *
* OF THE DATA SET. IF A PROGRAM (LIKE THIS ONE, FOR EXAMPLE)          *
* READ THE DATA SET BEFORE ANYTHING WAS WRITTEN TO IT, IT MIGHT       *
* SUCCESSFULLY READ WHAT WAS THERE BEFORE THE DATA SET WAS CREATED,   *
* AS IF THE DATA SET WERE NOT EMPTY.                                  *
* OR IT MIGHT GET A READ ERROR BECAUSE THE RECORD THAT WAS THERE      *
* BEFORE THE DATA SET WAS CREATED DOESN'T HAVE THE SAME RECFM, LRECL, *
* OR BLOCK SIZE AS THE DATA SET THAT WAS CREATED.                     *
* FOR SUCH SITUATIONS, A PROGRAM THAT CHECKS FOR AN EMPTY PS DATA SET *
* COULD STILL DETECT THAT IT WAS EMPTY BY READING THE FORMAT 1 DSCB   *
* FROM THE VTOC AND CHECKING THE DS1LSTAR FIELD FOR ZERO.             *
* ON SYSTEMS RUNNING Z/OS 1.11 OR LATER, THIS IS NOT NECESSARY.       *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                     IMPROVED MESSAGES                          SG1801
* I DID A FEW OF THESE.  ALL CODES 0, 4, 8 HAVE THE DSNAME       SG1801
* AND VOLSER INCLUDED.  ONLY ONE THAT DOESN'T IS CODE 12.        SG1801
* A SEQUENTIAL DATASET (DSORG=PS) IF NON-EXISTENT, SHOULD        SG1801
* GET A JCL ERROR.  IF A PDS MEMBER ISN'T THERE, THEN THE        SG1801
* S013-18 ABEND GETS INTERCEPTED, AND A CODE = 8 IS SHOWN.       SG1801
* MOST OF THIS WORK WAS DONE BY CBTUSER.                         SG1801
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
EMPTYTST CSECT
         USING *,R10
ENTRY0   B     BEGIN-*(,R15)
         DC    AL1(9),CL9'EMPTYTST'
         DC    CL16' &SYSDATE &SYSTIME '
WORKSIZ  DC    0F'0',AL1(0),AL3(WORKLEN)
BEGIN    STM   14,12,12(13)
         LR    R10,R15
         LR    R2,R1               SAVE POINTER TO PARM AND DDNAMES
         L     R0,WORKSIZ
         GETMAIN R,LV=(0)
         LR    R9,R1
         USING WORKD,R9
         XC    0(WORKINI,R1),0(R1)
         ST    R13,4(,R9)          OLD ADDRESS IN NEW SAVE AREA
         ST    R9,8(,R13)          NEW ADDRESS IN OLD SAVE AREA
         LR    R13,R9
         LA    R15,12
         ST    R15,RETCODE         INITIALLY SET RETCODE TO 12
         SPACE
***********************************************************************
*                    GET SYSTEM DATE AND TIME                         *
***********************************************************************
         STM   R14,R2,SAVE1402
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY,          x
               MF=(E,TIMEL)                                      SG1801
         OI    DATE+4,X'0F'
         UNPK  DATED,DATE
         OI    TIME+3,X'0F'
         UNPK  TIMED,TIME
*                          FILL HEADDATE AREA WITH INFO TO REUSE
         MVC   HEADDATE(2),DATED
         MVI   HEADDATE+2,C'/'
         MVC   HEADDATE+3(2),DATED+2
         MVI   HEADDATE+5,C'/'
         MVC   HEADDATE+6(4),DATED+4
         MVC   HEADDATE+12(2),TIMED
         MVI   HEADDATE+14,C':'
         MVC   HEADDATE+15(2),TIMED+2
         MVI   HEADDATE+17,C':'
         MVC   HEADDATE+18(2),TIMED+4
         LM    R14,R2,SAVE1402
***********************************************************************
*                                                                     *
*         CHECK PARM FOR Q (QUIET, DON'T OPEN SYSPRINT)               *
*                     OR W (ISSUE WTO)                                *
*                     OR C (ISSUE WTO ONLY IF EMPTY OR ERROR)         *
*                                                                     *
***********************************************************************
         SPACE
         L     R1,0(,R2)           POINT TO PARM LENGTH
         LH    R0,0(,R1)           GET PARM LENGTH
         LTR   R0,R0               IF NO PARM
         BZ    PARMDONE              SKIP PARM
         LA    R1,2(,R1)           POINT TO 1ST CHAR IN PARM
PARMLOOP CLI   0(R1),C'Q'          Q FOR QUIET, IGNORE SYSPRINT
         BNE   PARMW
         MVI   OPTQ,C'Q'
         B     PARMNEXT
PARMW    CLI   0(R1),C'W'          W FOR ISSUE WTO
         BNE   PARMC
         MVI   OPTW,C'W'
         B     PARMNEXT
PARMC    CLI   0(R1),C'C'          C FOR ISSUE WTO IF RC NOT = 0
         BNE   PARMNEXT
         MVI   OPTC,C'C'
PARMNEXT LA    R1,1(,R1)           POINT TO NEXT CHAR IN PARM
         BCT   R0,PARMLOOP         LOOP USING PARM LENGTH IN R0
PARMDONE EQU   *
         SPACE
***********************************************************************
*                                                                     *
*     GET JOBNAME STEPNAME AND PROCSTEP NAME FOR SYSPRINT REPORT      *
*                                                                     *
***********************************************************************
         L     R1,X'21C'           PSATOLD                       SG1801
         L     R1,12(,R1)          TIOT                          SG1801
         MVC   NJOB(8),0(R1)       JOB NAME                      SG1801
         MVC   PSTN(8),8(R1)       JOB STEP                      SG1801
         MVC   JSTN(8),16(R1)      JOBSTEP NAME FOR PROCS        SG1801
***********************************************************************
*                                                                     *
*         CHECK FOR DDNAME OVERRIDES                                  *
*                                                                     *
***********************************************************************
         SPACE
*         THIS USES THE SAME CONVENTION AS UTILITIES LIKE IEBGENER.
*         SYSPRINT OVERRIDE IS 6TH IN THE LIST OF DDNAMES
*         SYSUT1   OVERRIDE IS 8TH IN THE LIST OF DDNAMES
         TM    0(R2),X'80'         IF DDNAME OVERRIDES NOT PRESENT
         BO    DDX                    SKIP OVERRIDES
         L     R1,4(,R2)           POINT TO DDNAME LIST
         LA    R1,0(,R1)           CLEAR HIGH 8 BITS
         LTR   R1,R1               IF POINTER IS ZERO
         BZ    DDX                    SKIP OVERRIDES
         CLI   0(R1),0             IF LENGTH > 255
         BNE   DDX                    SKIP OVERRIDES
         CLI   1(R1),8*6           IF LIST NOT LONG ENOUGH FOR 6 DD'S
         BL    DDX                    SKIP OVERRIDE
         CLI   42(R1),0  (8*5+2)   IF SLOT EMPTY
         BE    DDUT1                  SKIP OVERRIDE
         MVC   PRTDD,42(R1)        COPY DDNAME FOR SYSPRINT
DDUT1    CLI   1(R1),8*8           IF LIST NOT LONG ENOUGH FOR 8 DD'S
         BL    DDX                    SKIP OVERRIDE
         CLI   58(R1),0  (8*7+2)   IF SLOT EMPTY
         BE    DDX                    SKIP OVERRIDE
         MVC   UT1DD,58(R1)        COPY DDNAME FOR SYSUT1
DDX      EQU   *
         SPACE
***********************************************************************
*                                                                     *
*         OPEN SYSPRINT IF DDNAME SYSPRINT IS ALLOCATED               *
*                                                                     *
***********************************************************************
         SPACE
         SR    R4,R4               ZERO R4 TO INDICATE NO SYSUT1
         SR    R5,R5               ZERO R5 TO INDICATE NO SYSPRINT
         CLI   OPTQ,C'Q'           IF THERE WAS A Q IN PARM
         BE    PRTX                  SKIP SYSPRINT
         LA    R5,PRTDCBW
         MVC   0(PRTDCBL,R5),PRTDCB
         CLI   PRTDD,0             IF SYSPRINT DDNAME OVERRIDE
         BE    *+10                  THEN
         MVC   DDNAM(8,R5),PRTDD     CHANGE DDNAME IN DCB
         LA    R1,DDNAM(,R5)       POINT TO DDNAME FOR DEVTYPE
         DEVTYPE (1),DEVAREA       CHECK FOR DDNAME IN TIOT
         LR    R0,R5               SAVE R5
         SR    R5,R5               ZERO R5 TO INDICATE NO SYSPRINT
         LTR   R15,R15             IF DEVTYPE SAYS DDNAME NOT IN TIOT
         BNZ   PRTX                  DON'T USE SYSPRINT
         LR    R5,R0               RESTORE R5 AND USE SYSPRINT
         LA    R15,PRTEXIT         GET ADDRESS OF PRTEXIT
         ST    R15,PRTEXTA         STORE ADDRESS IN PRTEXTA
         LA    R15,PRTEXTA         GET ADDRESS OF PRTEXTA
         MVI   0(R15),X'85'        MARK AS OPEN EXIT AND LAST ENTRY
         STCM  R15,7,EXLSA(R5)     EXLST=PRTEXTA, PRTEXTA -> PRTEXIT
         MVI   OPEN,X'80'
         OPEN  ((R5),OUTPUT),MF=(E,OPEN)
*        TM    OFLGS(R5),X'10'     IF OPEN FAILED (DDNAME NOT PRESENT)
*        BNO   EXIT                  EXIT
PRTX     EQU   *
         SPACE
***********************************************************************
*                                                                     *
*         OPEN SYSUT1                                                 *
*                                                                     *
***********************************************************************
         SPACE
         LA    R4,UT1DCBW
         MVC   0(UT1DCBL,R4),UT1DCB
         LA    R15,UT1EOF
         STCM  R15,7,EODAD(R4)
         CLI   UT1DD,0             IF SYSUT1 DDNAME OVERRIDE
         BE    *+10                  THEN
         MVC   DDNAM(8,R4),UT1DD     CHANGE DDNAME IN DCB
         LA    R1,DDNAM(,R4)       POINT TO DDNAME FOR DEVTYPE
         DEVTYPE (1),DEVAREA       CHECK FOR DDNAME IN TIOT
         LR    R0,R4               SAVE R4
         SR    R4,R4               ZERO R4 TO INDICATE NO SYSUT1
         LTR   R15,R15             IF DEVTYPE SAYS DDNAME NOT IN TIOT
         BNZ   PRNT                  DON'T USE SYSPRINT
         LR    R4,R0               RESTORE R5 AND USE SYSUT1
         LA    R15,UT1ABEND        POINT TO OPEN ABEND EXIT
         ST    R15,EXITLST         STORE IN 1ST WORD OF EXITLIST
         MVI   EXITLST,X'11'       MARK AS OPEN ABEND EXIT (MVS)
         LA    R15,JFCB            GET ADDRESS OF JFCB
         ST    R15,EXITLST+4       STORE ADDRESS IN EXITLST 2ND WORD
         MVI   EXITLST+4,X'87'     MARK AS JFCB PTR AND LAST ENTRY
         LA    R15,EXITLST         GET ADDRESS OF EXITLST
         STCM  R15,7,EXLSA(R4)     EXLST=EXITLST, EXITLST -> JFCB
         MVI   RDJFW,X'80'
         RDJFCB ((R4)),MF=(E,RDJFW)
         MVI   OPEN,X'80'
         OPEN  ((R4),INPUT),MF=(E,OPEN)
         TM    OFLGS(R4),X'10'     IF OPEN FAILED
         BO    UT1X                  THEN
         SR    R4,R4                 ZERO R4 TO INDICATE NO SYSUT1
         TM    STATUS,X'10'          IF IT WAS MEMBER NOT FOUND
         BZ    PRNT                    THEN
         MVI   RETCODE+3,8             SET RC TO 8
         B     PRNT                  SKIP GET
UT1X     EQU   *
         SPACE
***********************************************************************
*                                                                     *
*         READ FIRST RECORD OR GO TO UT1EOF STRAIGHT FROM GET         *
*                                                                     *
***********************************************************************
         SPACE
         MVI   RETCODE+3,4         SET RETURN CODE TO 4 FOR EMPTY
         GET   (R4)
         MVI   RETCODE+3,0         SET RETURN CODE TO 0 FOR NOT EMPTY
UT1EOF   EQU   *
         SPACE
***********************************************************************
*                                                                     *
*         ISSUE MESSAGE TO SYSPRINT                                   *
*                                                                     *
***********************************************************************
         SPACE
PRNT     LTR   R5,R5               IF SYSPRINT IS NOT OPEN
         BZ    WTOT                  SKIP MESSAGE
*---------------------->  PRINT TITLE TO SYSPRINT  <-----------* SG1801
         MVI   MSGLINE,X'40'                                     SG1801
         MVC   MSGLINE+1(L'MSGLINE-1),MSGLINE                    SG1801
         MVC   MSGLINE+1(18),=C'EMPTYTST - -------'              SG1801
         LA    R0,MSGLINE                                        SG1801
         PUT   (R5),(0)                                          SG1801
*---------------------->  PRINT TITLE TO SYSPRINT  <-----------* SG1801
         LA    R1,MSG08
         CLI   RETCODE+3,8         IF RC = 8, MEMBER NOT FOUND
         BE    DSN0                  GET DSNAME
         LA    R1,MSG12
         CLI   RETCODE+3,8         IF RC > 8                     SG1801
         BH    PRT4                  USE MSG12
DSN0     EQU   *                                                 SG1801
         MVI   MSGW,C' '
         MVC   MSGW+1(79),MSGW
         MVC   MSGW+4(19),=C' EMPTYTST - RC = 00'
         MVC   MSGW+24(44),JFCB    JFCB+JFCBDSNM-INFMJFCB
         LA    R0,44               MAX ITERATIONS
         LA    R1,MSGW+24+43       POINT TO END OF DSN
DSN1     CLI   0(R1),C' '          IS THIS LAST NONBLANK
         BNE   DSN2                YES, BRANCH
         BCTR  R1,0                BACK UP 1 CHARACTER
         BCT   R0,DSN1             DECREMENT AND BRANCH
DSN2     LA    R1,1(,R1)           POINT PAST RIGHTMOST NONBLANK
         CLI   JFCB+44,C' '        JFCBELNM (MEMBER NAME)
         BE    PRT1                  SKIP IF NONE
         MVI   0(R1),C'('
         MVC   1(8,R1),JFCB+44     JFCBELNM (MEMBER)
         LA    R0,8                MAX ITERATIONS
         LA    R1,8(,R1)           POINT TO END OF MEMBER
DSN3     CLI   0(R1),C' '          IS THIS LAST NONBLANK
         BNE   DSN4                YES, BRANCH
         BCTR  R1,0                BACK UP 1 CHARACTER
         BCT   R0,DSN3             DECREMENT AND BRANCH
DSN4     LA    R1,1(,R1)           POINT PAST RIGHTMOST NONBLANK
         MVI   0(R1),C')'
         LA    R1,1(,R1)           POINT PAST RIGHTMOST NONBLANK
PRT1     CLI   JFCB+118,C' '       IF VOLUME IS BLANK - JFCBVOLS
         BE    PRT1A                SKIP VOLUME (DUMMY)
         MVC   1(9,R1),=C'ON VOLUME'
         MVC   11(6,R1),JFCB+118   VOLUME FROM JFCB JFCBVOLS
         LA    R1,17(,R1)          POINT PAST RIGHTMOST NONBLANK
PRT1A    EQU   *                                                 SG1801
         CLI   RETCODE+3,8                                       SG1801
         BNE   PRT1B                                             SG1801
         MVC   1(13,R1),=C'WAS NOT FOUND'                        SG1801
         LA    R1,14(,R1)                                        SG1801
         MVI   MSGW+22,C'8'        CHANGE 00 TO 08               SG1801
         B     PRT3                                              SG1801
PRT1B    EQU   *                                                 SG1801
         CLI   RETCODE+3,0
         BNE   PRT2
         MVC   1(12,R1),=C'IS NOT EMPTY'
         LA    R1,13(,R1)
         B     PRT3
PRT2     MVC   1(8,R1),=C'IS EMPTY'
         LA    R1,9(,R1)
         MVI   MSGW+22,C'4'        CHANGE 00 TO 04
PRT3     LA    R0,MSGW
         SR    R1,R0               COMPUTE MESSAGE LENGTH
         SLL   R1,16               SHIFT INTO RDW FORM
         ST    R1,MSGW             SET RDW
         LA    R1,MSGW
PRT4     TM    RECFM(R5),X'C0'     IF SYSPRINT IS RECFM U
         BO    PRTU                  GO TO PRTU
         TM    RECFM(R5),X'40'     IF SYSPRINT IS RECFM V
         BO    PRTV                  GO TO PRTV
         MVI   PBUF,C' '
         MVC   PBUF+1(136),PBUF
         LH    R14,0(,R1)          GET LENGTH OF MESSAGE INCL RDW
         SH    R14,=H'5'           REDUCE LENGTH BY 4 AND 1 FOR EX
         B     *+10
         MVC   PBUF(0),4(R1)
         EX    R14,*-6             COPY MSG TO PBUF
         LA    R0,PBUF
         B     PRTP
PRTV     LH    R14,BLKSI(,R5)      GET DCB RECORD LENGTH IF UNBLOCKED
         SH    R14,=H'4'           COMPUTE MAX RECORD LENGTH
         TM    RECFM(R5),X'10'     IF RECFM INDICATES BLOCKED
         BZ    *+10                  THEN
         LH    R14,LRECL(,R5)        GET MAX RECORD LENGTH FROM LRECL
         CH    R14,0(,R1)          COMPARE TO MESSAGE LENGTH IN RDW
         BL    WTOT                SKIP PUT IF MESSAGE TOO LONG
         LR    R0,R1               POINT R0 TO MESSAGE RDW
         B     PRTP
PRTU     LH    R0,0(,R1)           GET LENGTH FROM MESSAGE RDW
         SH    R0,=H'4'            COMPUTE LENGTH WITHOUT RDW
         STH   R0,LRECL(,R5)       SET RECORD SIZE IN DCB FOR RECFM U
         LA    R0,4(,R1)           POINT R0 PAST RDW TO MESSAGE
PRTP     EQU   *
         PUT   (R5),(0)
*---------------------->  PRINT TITLE TO SYSPRINT  <-----------* SG1801
         MVI   MSGLINE,X'40'                                     SG1801
         MVC   MSGLINE+1(L'MSGLINE-1),MSGLINE                    SG1801
         MVC   MSGLINE+1(18),=C'EMPTYTST - -------'              SG1801
         LA    R0,MSGLINE                                        SG1801
         PUT   (R5),(0)                                          SG1801
*---------------------->  PRINT TITLE TO SYSPRINT  <-----------* SG1801
         MVI   MSGLINE,X'40'                                     SG1801
         MVC   MSGLINE+1(L'MSGLINE-1),MSGLINE                    SG1801
         MVC   MSGLINE+1(15),=C'EMPTYTST - V1.2'                 SG1801
         MVC   MSGLINE+20(19),=C'Time of Execution: '            SG1801
         MVC   MSGLINE+40(23),HEADDATE                           SG1801
         LA    R0,MSGLINE                                        SG1801
         PUT   (R5),(0)                                          SG1801
*---------------------->  PRINT TITLE TO SYSPRINT  <-----------* SG1801
         MVI   MSGLINE,X'40'                                     SG1801
         MVC   MSGLINE+1(L'MSGLINE-1),MSGLINE                    SG1801
         MVC   MSGLINE+1(15),=C'EMPTYTST - V1.2'                 SG1801
         MVC   MSGLINE+20(9),=C'Jobname: '                       SG1801
         MVC   MSGLINE+30(8),NJOB                                SG1801
         MVC   MSGLINE+40(9),=C'Stepname:'                       SG1801
         MVC   MSGLINE+51(8),PSTN                                SG1801
         MVC   MSGLINE+61(9),=C'Jobstep: '                       SG1801
         MVC   MSGLINE+71(8),JSTN                                SG1801
         LA    R0,MSGLINE                                        SG1801
         PUT   (R5),(0)                                          SG1801
*---------------------->  PRINT TITLE TO SYSPRINT  <-----------* SG1801
         SPACE
***********************************************************************
*                                                                     *
*         ISSUE MESSAGE TO CONSOLE IF PARM=W                          *
*                                                                     *
***********************************************************************
         SPACE
WTOT     CLI   OPTW,0              IF PARM HAS NO W
         BE    WTOX                  SKIP WTO
         CLI   OPTC,0              IF PARM HAS W AND C
         BE    WTOK                  AND
         CLI   RETCODE+3,0           RETCODE IS 0
         BE    WTOX                  SKIP WTO
         CLI   RETCODE+3,8                                       SG1801
         BE    WTOK8                                             SG1801
WTOK     EQU   *                                                 SG1801
         MVI   WTOW,X'40'          CLEAR OUTPUT AREA             SG1801
         MVC   WTOW+1(L'WTOW-1),WTOW                             SG1801
         MVC   WTOW(WTM12L),WTM12
         B     WTOK8S                                            SG1801
WTOK8    EQU   *                                                 SG1801
         MVI   WTOW,X'40'          CLEAR OUTPUT AREA             SG1801
         MVC   WTOW+1(L'WTOW-1),WTOW                             SG1801
WTOK8S   EQU   *                                                 SG1801
         CLI   RETCODE+3,8         IF RETCODE > 8
         BH    WTOI                  USE WTM12 WHICH NEEDS NO CHANGE
         BE    WTO00EI                        = 8 GO HANDLE      SG1801
         CLI   RETCODE+3,4                                       SG1801
         BL    WTO00GO                        < 4 DO ZERO        SG1801
         BE    WTO00FO                        = 4 GO HANDLE      SG1801
         B     WTO00GO               CATCHALL. SHOULDN'T HAPPEN  SG1801
WTO00EI  EQU   *                                                 SG1801
         MVC   WTOW(WTM08L),WTM08  IF 8, WRITE MSG, DSN NOEXIST  SG1801
         MVC   WTOW+4+27(44),JFCB  ADD DSN TO MESSAGE - JFCBDSNM
         B     WTO00PA               PASS THE CODE FOR 0.        SG1801
WTO00FO  EQU   *                                                 SG1801
         MVC   WTOW(WTM04L),WTM04  IF 4, WRITE MSG, DSN EMPTY    SG1801
         MVC   WTOW+4+27(44),JFCB  ADD DSN TO MESSAGE - JFCBDSNM
         B     WTO00PA                                           SG1801
WTO00GO  MVC   WTOW(WTM00L),WTM00  USE WTM00 WHICH NEEDS DSN ADDED
         MVC   WTOW+4+27(44),JFCB  ADD DSN TO MESSAGE - JFCBDSNM
WTO00PA  EQU   *                                                 SG1801
         LA    R0,44               MAX ITERATIONS
         LA    R1,WTOW+4+27+43     POINT TO END OF DSN
WTO1     CLI   0(R1),C' '          IS THIS LAST NONBLANK
         BNE   WTO2                YES, BRANCH
         BCTR  R1,0                BACK UP 1 CHARACTER
         BCT   R0,WTO1             DECREMENT AND BRANCH
WTO2     LA    R1,1(,R1)           POINT PAST RIGHTMOST NONBLANK
         CLI   JFCB+44,C' '        JFCBELNM (MEMBER NAME)
         BE    WTO5                  SKIP IF NONE
         MVI   0(R1),C'('
         MVC   1(8,R1),JFCB+44     JFCBELNM (MEMBER NAME)
         LA    R0,8                MAX ITERATIONS
         LA    R1,8(,R1)           POINT TO END OF MEMBER
WTO3     CLI   0(R1),C' '          IS THIS LAST NONBLANK
         BNE   WTO4                YES, BRANCH
         BCTR  R1,0                BACK UP 1 CHARACTER
         BCT   R0,WTO3             DECREMENT AND BRANCH
WTO4     LA    R1,1(,R1)           POINT PAST RIGHTMOST NONBLANK
         MVI   0(R1),C')'
         LA    R1,1(,R1)           POINT PAST RIGHTMOST NONBLANK
WTO5     CLI   JFCB+118,C' '       IF VOLUME IS BLANK -JFCBVOLS
         BE    WTO5A                SKIP VOLUME (DUMMY)
         MVC   1(9,R1),=C'ON VOLUME'
         MVI   10(R1),X'40'                                      SG1801
         MVC   11(6,R1),JFCB+118   VOLUME FROM JFCB JFCBVOLS
         LA    R1,17(,R1)          POINT PAST RIGHTMOST NONBLANK
         MVI   17(R1),X'40'                                      SG1801
WTO5A    EQU   *                                                 SG1801
         CLI   RETCODE+3,8         DATASET NOT FOUND?            SG1801
         BE    WTO5B               GO HANDLE.                    SG1801
         CLI   RETCODE+3,0         DATASET NOT EMPTY?            SG1801
         BNE   WTO6                TELL EM.                      SG1801
         MVC   1(12,R1),=C'IS NOT EMPTY'
         LA    R1,13(,R1)
         B     WTO7
WTO5B    EQU   *                                                 SG1801
         MVC   0(10,R1),=C' NOT FOUND'                           SG1801
         LA    R1,10(,R1)                                        SG1801
         B     WTO7                                              SG1801
WTO6     MVC   1(8,R1),=C'IS EMPTY'
         LA    R1,9(,R1)
         MVI   WTOW+29,C'4'        CHANGE 00 TO 04
WTO7     MVC   0(4,R1),WTM00+WTM00L-4  DESCRIPTOR AND ROUTING CODES
         LA    R0,WTOW
         SR    R1,R0               COMPUTE MESSAGE LENGTH
         STH   R1,WTOW
WTOI     EQU   *
         WTO   MF=(E,WTOW)
WTOX     EQU   *
         SPACE
***********************************************************************
*                                                                     *
*         CLOSE SYSUT1                                                *
*                                                                     *
***********************************************************************
         SPACE
CLSE     LTR   R4,R4               IF SYSUT1 NOT OPEN
         BZ    CLSP                  SKIP CLOSE
         MVI   CLOSE,X'80'
         CLOSE ((R4)),MF=(E,CLOSE)
         BAL   R6,FREEPOOL
         SPACE
CLSP     LTR   R5,R5               IF SYSPRINT NOT OPEN
         BZ    EXIT                  SKIP CLOSE
         MVI   CLOSE,X'80'
         CLOSE ((R5)),MF=(E,CLOSE)
         LR    R4,R5
         BAL   R6,FREEPOOL
         SPACE
EXIT     L     R2,RETCODE
         LR    R1,R13             POINT TO ADDRESS TO FREEMAIN
         L     R0,WORKSIZ         LENGTH TO FREEMAIN
         L     R13,4(,R13)        RESTORE ORIGINAL R13
         FREEMAIN R,A=(1),LV=(0)
*        DROP  R9
         LR    R15,R2
         LM    0,12,20(R13)
         L     R14,12(,R13)
         BR    R14
         SPACE
FREEPOOL FREEPOOL (R4)
         BR    R6
         SPACE
***********************************************************************
*                                                                     *
*         DCB OPEN EXIT FOR SYSPRINT                                  *
*                                                                     *
*         SET ATTRIBUTES IF NEEDED FOR SYSOUT OR TERMINAL OR DUMMY    *
*                                                                     *
***********************************************************************
         SPACE
PRTEXIT  CLI   RECFM(R1),0         IF NO RECFM
         BNE   *+8                   THEN
         MVI   RECFM(R1),X'94'       SET RECFM=FBA
         TM    RECFM(R1),X'C0'     IF RECFM U
         BO    PRTEXBL               GO CHECK BLKSI
         TM    RECFM(R1),X'10'     IF RECFM INDICATES BLOCKED
         BZ    PRTEXBL               THEN
         CLC   LRECL(2,R1),=H'0'     IF NO LRECL
         BNE   PRTEXBL                 THEN
         CLC   BLKSI(2,R1),=H'0'       IF BLKSI IS ZERO
         BE    PRTEXLR                   THEN USE LRECL 121
         MVC   LRECL(2,R1),BLKSI(R1)   ELSE USE BLKSI AS LRECL
         B     PRTEXBL
PRTEXLR  MVC   LRECL(2,R1),=H'121' USE LRECL 121
PRTEXBL  CLC   BLKSI(2,R1),=H'0'   IF NO BLKSI
         BNE   PRTEXBR               THEN
         MVC   BLKSI(2,R1),=H'121'   USE BLKSI 121
         TM    RECFM(R1),X'C0'       IF RECFM U
         BO    PRTEXBR                 DONE
         TM    RECFM(R1),X'40'       IF RECFM V
         BZ    PRTEXBR                 THEN
         MVC   BLKSI(2,R1),=H'125'     USE BLKSI 125
PRTEXBR  BR    R14
         SPACE
***********************************************************************
*                                                                     *
*         DCB OPEN ABEND EXIT FOR SYSUT1                              *
*                                                                     *
***********************************************************************
         SPACE
UT1ABEND EQU   *
         L     R8,0(,R1)           GET COMPLETION CODE
         N     R8,=A(X'FFF0FF00')
         CL    R8,=A(X'01301800')  IS IT AN 013-18 ABEND
         BE    UT1MEMBR            YES, BRANCH
         MVI   4(R1),0             NO, ABNORMALLY TERMINATE
         BR    R14
UT1MEMBR OI    STATUS,X'10'        INDICATE MEMBER NOT FOUND
         MVI   3(R1),4             IGNORE THE ABEND
         BR    R14
         DROP  R9
         SPACE
***********************************************************************
*                                                                     *
*         DATA AREAS                                                  *
*                                                                     *
***********************************************************************
         SPACE
         LTORG
         DC    0D'0'
WTM00    WTO   'EMP000I EMPTYTST - RC = 00 <DSN> IS NOT EMPTY',        +
               ROUTCDE=(4,11),MF=L
WTM00L   EQU   *-WTM00
WTM04    WTO   'EMP004I EMPTYTST - RC = 00 <DSN> IS EMPTY',            +
               ROUTCDE=(4,11),MF=L
WTM04L   EQU   *-WTM04
WTM08    WTO   'EMP008I EMPTYTST - RC = 08 <DSN> MEMBER NOT FOUND',    +
               ROUTCDE=(4,11),MF=L
WTM08L   EQU   *-WTM08
WTM12    WTO   'EMP012I EMPTYTST - RC = 12 ERROR OCCURRED - SYSUT1 MISS+
               ING',                                                   +
               ROUTCDE=(4,11),MF=L
WTM12L   EQU   *-WTM12
         DC    0D'0'
         PRINT NOGEN
UT1DCB   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=(GL),EODAD=0
UT1DCBL  EQU   *-UT1DCB
PRTDCB   DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),EODAD=0
PRTDCBL  EQU   *-PRTDCB
MSG08    DC    AL2(MSG08L,0),C' EMPTYTST - RC = 08 MEMBER NOT FOUND'
MSG08L   EQU   *-MSG08
MSG12    DC    AL2(MSG12L,0),C' EMPTYTST - RC = 12 ERROR OCCURRED - SYS+
               UT1 MISSING'
MSG12L   EQU   *-MSG12
         DC    0D'0'
WORKD    DSECT
         DS    18F
DOUBLE   DS    D
RETCODE  DS    F
OPTC     DS    C
OPTQ     DS    C
OPTW     DS    C
STATUS   DS    C
NJOB     DS    CL8                     JOB NAME                  SG1801
PSTN     DS    CL8                     STEP NAME                 SG1801
JSTN     DS    CL8                     JOB STEP NAME FOR PROCS   SG1801
UT1DD    DS    CL8
PRTDD    DS    CL8
DEVAREA  DS    2F
OPEN     DS    F
CLOSE    DS    F
PRTEXTA  DS    F
EXITLST  DS    2F
RDJFW    DS    F
WORKINI  EQU   *-WORKD
MSGLINE  DS    CL121                                             SG1801
TIMEL    TIME  LINKAGE=SYSTEM,MF=L
SAVE1402 DS    6F                 Extra fullword for safety             08376
TIMED    DS    CL7                                                      08377
DATED    DS    CL9                                                      08378
DATETIME DS    4F                                                       08379
         ORG   DATETIME                                                 08380
TIME     DS    CL4                                                      08381
         DS    CL4                                                      08382
DATE     DS    CL5                                                      08383
         DS    CL3                                                      08384
HEADDLIT DS    0CL31              Literal for headings - date and time  08385
         DC    CL6'Today:'                                              08386
         DC    CL2' '                                                   08387
HEADDATE DC    CL23' '                                                  08388
UT1DCBW  DS    0F,(UT1DCBL)X
PRTDCBW  DS    0F,(PRTDCBL)X
WTOW     DS    0F,CL120 LONGEST WTO MSG
PBUF     DS    144C     LONGEST LRECL 137, ROUNDED TO 8-BYTE MULTIPLE
JFCB     DS    0F,176C
MSGW     DS    0F,CL112 LONGEST MSG IS 108, ROUNDED TO 8-BYTE MULTIPLE
         DS    0D
WORKLEN  EQU   *-WORKD
         SPACE
EODAD    EQU   33
RECFM    EQU   36
EXLSA    EQU   37
DDNAM    EQU   40
OFLGS    EQU   48
BLKSI    EQU   62
LRECL    EQU   82
         SPACE
*DJFCB   DSECT
*        IEFJFCBN
         SPACE
         YREGS                                                   SG1801
         END   ENTRY0
