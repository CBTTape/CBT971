TEMPT    TITLE 'BATCH PROGRAM TO TELL IF A DATASET IS EMPTY'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                                                                     *
*    PROGRAM :  EMPTYTST                                              *
*                                                                     *
*    FUNCTION:  FIND OUT IF A DATASET OR A PDS MEMBER IS EMPTY.       *
*                                                                     *
*    RESTRICTIONS:  SYSUT1 CANNOT POINT TO A CONCATENATION OF         *
*               DATASETS.  SYSUT1 MUST POINT TO A SINGLE DATASET      *
*               OR A SINGLE PDS MEMBER.  IF SYSUT1 POINTS TO A        *
*               CONCATENATION OF DATASETS, THEN EMPTYTST RETURNS      *
*               A (SEVERE ERROR) CODE OF 16.                          *
*                                                                     *
*    ACTION  :  RETURNS CODE = 0 IF DATASET IS NOT EMPTY.             *
*               RETURNS CODE = 4 IF DATASET IS EMPTY.                 *
*               JCL ERROR IF A SEQUENTIAL DATASET (DSORG=PS)          *
*                 DOES NOT EXIST.                                     *
*               RETURNS CODE = 8 IF PDS MEMBER DOES NOT EXIST.        *
*               RETURNS CODE = 12 IF SYSUT1 DDNAME IS MISSING.        *
*               RETURNS CODE = 16 IF SYSUT1 POINTS TO A DATASET       *
*                 CONCATENATION.                                      *
*                                                                     *
*    SEE BELOW FOR FURTHER DOCUMENTATION.                             *
*                                                                     *
*    DATE WRITTEN:   JANUARY 21 2018                                  *
*                                                                     *
*    DATE UPDATED:   FEBRUARY 18 2018                                 *
*                                                                     *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                        HOW IT WORKS:                                *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* READ THE FIRST RECORD OF THE DATA SET, PDS MEMBER, OR PDSE MEMBER   *
* THAT IS ALLOCATED TO DDNAME SYSUT1.                                 *
* IF THE READ IS SUCCESSFUL, EXIT WITH RETURN CODE 0.                 *
* IF THE READ HITS END-OF-FILE, EXIT WITH RETURN CODE 4,              *
* WHICH MEANS THE DATA SET OR MEMBER IS EMPTY.                        *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* IF SYSPRINT IS ALLOCATED, A MESSAGE IS WRITTEN TO SYSPRINT.         *
* OTHER POSSIBLE RETURN CODES ARE 12 FOR MISSING SYSUT1 DDNAME        *
* OR 8 FOR MEMBER DOES NOT EXIST, AND 16 IF SYSUT1 POINTS TO          *
* A DATASET CONCATENATION.                                            *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                                                                     *
* SAMPLE JCL :                                                        *
*                 //EXEC PGM=EMPTYTST                                 *
*                 //SYSPRINT DD SYSOUT=*                              *
*                 //SYSUT1 DD DSN=A.B.C,DISP=SHR                      *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*         OPTIONS IN THE PARM FIELD.   PARM = W Q C                   *
*                                                                     *
* THE PARM FIELD IS CHECKED FOR THE PRESENCE OF CERTAIN CHARACTERS    *
* WHICH ALLOW OPTIONS TO BE SPECIFIED.                                *
* IF MORE THAN ONE OPTION IS USED, THE CHARACTERS DO NOT NEED TO      *
* BE SEPARATED, OR IN ANY SPECIFIC ORDER.                             *
* IF THE PARM FIELD CONTAINS THE CHARACTER "W" THEN THE PROGRAM       *
* WILL ISSUE A WTO WITH ONE OF THESE MESSAGES:                        *
*                                                                     *
*   EMP000I EMPTYTST - RC = 00 <DSN> ON VOLUME <VOL> IS NOT EMPTY     *
*   EMP004I EMPTYTST - RC = 04 <DSN> ON VOLUME <VOL> IS EMPTY         *
*   EMP008I EMPTYTST - RC = 08 <DSN> ON VOLUME <VOL> WAS NOT FOUND    *
*   EMP012E EMPTYTST - RC = 12 ERROR OCCURRED - SYSUT1 MISSING        *
*   EMP016E EMPTYTST - RC = 16 ERROR - SYSUT1 IS CONCATENATION        *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* IF THE PARM FIELD CONTAINS THE LETTER "W" AND THE LETTER "C"        *
* (FOR CONDITIONAL) THEN IT WILL ISSUE A WTO ONLY IF THE RETURN       *
* CODE IS NOT ZERO.                                                   *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* IF THE PARM FIELD CONTAINS THE LETTER "Q" (FOR QUIET)               *
* THEN THE PROGRAM WILL NOT OPEN SYSPRINT EVEN IF IT IS ALLOCATED.    *
* THIS IS INTENDED FOR RUNNING THE PROGRAM UNDER TSO WHEN A USER      *
* PREFERS NOT TO SEE A MESSAGE EVEN THOUGH SYSPRINT MIGHT BE          *
* ALLOCATED TO THE TERMINAL.                                          *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* DDNAME SYSPRINT IS OPTIONAL                                         *
* EVEN IF DDNAME SYSPRINT IS ALLOCATED, THE PROGRAM WILL NOT          *
* OPEN IT OR WRITE TO IT IF PARM=Q IS SPECIFIED.                      *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                                                                     *
* USAGE NOTE:                                                         *
*                                                                     *
* PRIOR TO Z/OS 1.11 WHEN A PS DATA SET THAT WAS NOT SMS-MANAGED WAS  *
* FIRST CREATED, NO END-OF-FILE MARK WAS WRITTEN AT THE BEGINNING     *
* OF THE DATA SET. IF A PROGRAM (LIKE THIS ONE, FOR EXAMPLE)          *
* READ THE DATA SET BEFORE ANYTHING WAS WRITTEN TO IT, IT MIGHT       *
* SUCCESSFULLY READ WHAT WAS THERE BEFORE THE DATA SET WAS CREATED,   *
* AS IF THE DATA SET WERE NOT EMPTY.                                  *
* OR IT MIGHT GET A READ ERROR BECAUSE THE RECORD THAT WAS THERE      *
* BEFORE THE DATA SET WAS CREATED DOESN'T HAVE THE SAME RECFM, LRECL, *
* OR BLOCK SIZE AS THE DATA SET THAT WAS CREATED.                     *
* FOR SUCH SITUATIONS, A PROGRAM THAT CHECKS FOR AN EMPTY PS DATA SET *
* COULD STILL DETECT THAT IT WAS EMPTY BY READING THE FORMAT 1 DSCB   *
* FROM THE VTOC AND CHECKING THE DS1LSTAR FIELD FOR ZERO.             *
* ON SYSTEMS RUNNING Z/OS 1.11 OR LATER, THIS IS NOT NECESSARY.       *
* (THIS PROBLEM WAS TAKEN CARE OF BY GERHARD'S ADDITIONAL CODE.)      *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                     IMPROVED MESSAGES                          SG1801
* I DID A FEW OF THESE.  ALL CODES 0, 4, 8 HAVE THE DSNAME       SG1801
* AND VOLSER INCLUDED.  ONLY ONE THAT DOESN'T IS CODE 12.        SG1801
* A SEQUENTIAL DATASET (DSORG=PS) IF NON-EXISTENT, SHOULD        SG1801
* GET A JCL ERROR.  IF A PDS MEMBER ISN'T THERE, THEN THE        SG1801
* S013-18 ABEND GETS INTERCEPTED, AND A CODE = 8 IS SHOWN.       SG1801
* MOST OF THIS WORK WAS DONE BY CBTUSER.                         SG1801
*                                                                     *
* THIS PROGRAM WAS WRITTEN BY CBTUSER AND WAS GREATLY IMPROVED        *
* BY GERHARD POSTPISCHIL.                                             *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* Changes:                                                            *
* 2018-02-18  CBT   Detect SYSUT1 pointing to a concatenation         *
*                   Fix various errors                                *
*                   Improve messages                                  *
* 2018-02-04  GYP   (I can't resist meddling - sorry)                 *
*                   Changed code to assemble and execute under MVS    *
*                   Avoid 013-18 abend on missing member              *
*                   Avoid 001 on uninitialized MVS DS - test DS1LSTAR *
*                   Test PDS for logical empty (no members)           *
*                   Improved(?) message processing                    *
*                   Require both SYS1.MACLIB and SYS1.(A)MODGEN for   *
*                     clean assembly                                  *
*                   Replaced new format TIME with MVS compatible code *
*                   Handle PARM correctly for TSO CP aand batch       *
*                   Fixed 002 abend for SYSPRINT RECFM=V..            *
*  2018-02-17  CBT  Fixed check of PRTIX at GOPRINTA to PRTIX+1.      *
*                   Don't use LRECL for SYSPRINT if RECFM unblocked.  *
*                   Fail with rc 16 if SYSUT1 is a concatenation.     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
         MACRO ,                                                GP18035
&NM      #PUT  &LN                                              GP18035
.*                                                              GP18035
.*   THIS MACRO REPLACES THE ORIGINAL PUT REQUESTS. INSTEAD IT  GP18035
.*   CALLS A SUBROUTINE THAT ADAPTS THE RECORDS TO F/V/U FORMAT GP18035
.*                                                              GP18035
         LCLC  &LBL                                             GP18035
         LCLA  &K                                               GP18035
&K       SETA  K'&LN                                            GP18035
&LBL     SETC  '&NM'                                            GP18035
         AIF   (&K LT 3).GOLA                                   GP18035
         AIF   ('&LN'(1,1) NE '(' OR '&LN'(2,1) EQ '(').GOLA    GP18035
         AIF  ('&LN'(&K,1) NE ')' OR '&LN'(&K-1,1) EQ ')').GOLA GP18035
         AIF   ('&LN' EQ '(1)' OR '&LN' EQ '(R1)').GOBAL        GP18035
&LBL     LR    R1,&LN(1)                                        GP18035
&LBL     SETC  ''                                               GP18035
         AGO   .GOBAL                                           GP18035
.GOLA    ANOP  ,                                                GP18035
&LBL     LA    R1,&LN                                           GP18035
&LBL     SETC  ''                                               GP18035
.GOBAL   ANOP  ,                                                GP18035
&LBL     BAL   R14,GOPRINT                                      GP18035
         MEND  ,                                                GP18035
         SPACE 2
         PUNCH ' ORDER EMPTYTST(P) ' MAKE DUMPS EASIER TO READ ***DEB
EMPTYTST CSECT ,
         USING *,R10
ENTRY0   B     BEGIN-*(,R15)
         DC    AL1(9),CL9'EMPTYTST'
         DC    CL16' &SYSDATE &SYSTIME '
WORKSIZ  DC    0F'0',AL1(0),AL3(WORKLEN)
BEGIN    STM   R14,R12,12(13)
         LR    R10,R15
         LR    R2,R1               SAVE POINTER TO PARM AND DDNAMES
         L     R0,WORKSIZ
         GETMAIN R,LV=(0)
*DEBUG*  GETMAIN RU,LV=WORKSIZ,BNDRY=PAGE ***DEBUG - EASIER ADDRESSES
         LR    R9,R1
         USING WORKD,R9
         XC    0(WORKINI,R1),0(R1)
         ST    R13,4(,R9)          OLD ADDRESS IN NEW SAVE AREA
         ST    R9,8(,R13)          NEW ADDRESS IN OLD SAVE AREA
         LR    R13,R9
         LA    R15,12
         ST    R15,RETCODE         INITIALLY SET RETCODE TO 12
         SPACE 1
***********************************************************************
*                    GET SYSTEM DATE AND TIME                         *
***********************************************************************
         STM   R14,R2,SUBSAVE                                   GP18035
         AGO   .MVSDATE                                         GP18035
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY,          x
               MF=(E,TIMEL)                                      SG1801
         OI    DATE+4,X'0F'
         UNPK  DATED,DATE
         OI    TIME+3,X'0F'
         UNPK  TIMED,TIME
*                          FILL HEADDATE AREA WITH INFO TO REUSE
         MVC   HEADDATE(2),DATED
         MVI   HEADDATE+2,C'/'
         MVC   HEADDATE+3(2),DATED+2
         MVI   HEADDATE+5,C'/'
         MVC   HEADDATE+6(4),DATED+4
         MVC   HEADDATE+12(2),TIMED
         MVI   HEADDATE+14,C':'
         MVC   HEADDATE+15(2),TIMED+2
         MVI   HEADDATE+17,C':'
         MVC   HEADDATE+18(2),TIMED+4
         AGO   .COMDATE
.MVSDATE ANOP  ,                                                GP18035
         MVI   HEADDATE-1,C' '                                  GP18035
         MVC   HEADDATE,HEADDATE-1   BLANK UNUSED BYTES         GP18035
         MVI   DATETYPE,1         request MMDDYYYY              GP18035
         MVI   TIMETYPE,2         request packed time           GP18035
         OI    DATETYPE,DATLOCAL  IF ON, ADJUST FOR LOCAL TIME  GP18035
         BAL   R14,SUBSTCK                                      GP18035
         UNPK  DB(9),PLDATE(5)    CONVERT HEX TO UNPACKED       GP18035
         MVI   DB+8,C'/'          DATE SEPARATOR                GP18035
         MVC   HEADDATE(8),=AL1(0,1,8,2,3,8,6,7)                GP18035
         TR    HEADDATE(8),DB     FORMAT DATE                   GP18035
         UNPK  DB(9),PLTIME(5)    CONVERT HEX TO UNPACKED       GP18035
         MVI   DB+8,C':'          DATE SEPARATOR                GP18035
         MVC   HEADDATE+12(8),=AL1(0,1,8,2,3,8,6,7)             GP18035
         TR    HEADDATE+12(8),DB     FORMAT DATE                GP18035
.COMDATE LM    R14,R2,SUBSAVE                                   GP18035
***********************************************************************
*                                                                     *
*         CHECK PARM FOR Q (QUIET, DON'T OPEN SYSPRINT)               *
*                     OR W (ISSUE WTO)                                *
*                     OR C (ISSUE WTO ONLY IF EMPTY OR ERROR)         *
*                                                                     *
***********************************************************************
         SPACE 1
*LOCAL*  PARMLOAD R2,PTR=R2       GET PGM OR TSO CP PARM        GP18035
         L     R2,0(,R2)                                        GP18035
         LH    1+R2,0(,R2)   GET LENGTH                         GP18035
         LTR   1+R2,1+R2     ANY                                GP18035
         BZ    PARMLEN         NO; DON'T TEST TEXT              GP18035
         CLI   2(R2),0       TSO CP CALL?                       GP18035
         BH    PARMLEN         NO, USE OS FORM                  GP18035
         OI    STATUS,FGSCP  SET TSO CP FLAG                    GP18035
         SH    1+R2,=H'4'    ALLOW FOR LENGTH LENGTH            GP18035
         SH    1+R2,2(,R2)   ALLOW FOR PARSED COMMAND NAME      GP18035
         AH    R2,2(,R2)     ALLOW FOR PARSED COMMAND NAME      GP18035
         LA    R2,2(,R2)     SKIP SECOND LENGTH                 GP18035
PARMLEN  LA    R2,2(,R2)     SKIP FIRST LENGTH                  GP18035
         LTR   R3,R3              IF NO PARM                    GP18035
         BZ    PARMDONE             SKIP PARM                   GP18035
PARMLOOP CLI   0(R2),C'Q'          Q FOR QUIET, IGNORE SYSPRINT
         BNE   PARMW
         MVI   OPTQ,C'Q'
         B     PARMNEXT
PARMW    CLI   0(R2),C'W'          W FOR ISSUE WTO
         BNE   PARMC
         MVI   OPTW,C'W'
         B     PARMNEXT
PARMC    CLI   0(R2),C'C'          C FOR ISSUE WTO IF RC NOT = 0
         BNE   PARMNEXT
         MVI   OPTC,C'C'
PARMNEXT LA    R2,1(,R2)           POINT TO NEXT CHAR IN PARM
         BCT   R3,PARMLOOP         LOOP USING PARM LENGTH IN R0
PARMDONE DS    0H
         SPACE 1
***********************************************************************
*                                                                     *
*     GET JOBNAME STEPNAME AND PROCSTEP NAME FOR SYSPRINT REPORT      *
*                                                                     *
***********************************************************************
         L     R1,X'21C'           PSATOLD                       SG1801
         L     R1,12(,R1)          TIOT                          SG1801
         MVC   NJOB(L'NJOB+L'PSTN+L'JSTN),0(R1)  JOB / STEP / JOBSTEP
***********************************************************************
*                                                                     *
*         CHECK FOR DDNAME OVERRIDES                                  *
*                                                                     *
***********************************************************************
         SPACE 1
*         THIS USES THE SAME CONVENTION AS UTILITIES LIKE IEBGENER.
*         SYSPRINT OVERRIDE IS 6TH IN THE LIST OF DDNAMES
*         SYSUT1   OVERRIDE IS 8TH IN THE LIST OF DDNAMES
         TM    STATUS,FGSCP  PARM IN TSO CP FORMAT?             GP18035
         BNZ   DDX             YES; NO OVERRIDE                 GP18035
         TM    0(R2),X'80'         IF DDNAME OVERRIDES NOT PRESENT
         BO    DDX                    SKIP OVERRIDES
         L     R1,4(,R2)           POINT TO DDNAME LIST
         LA    R1,0(,R1)           CLEAR HIGH 8 BITS
         LTR   R1,R1               IF POINTER IS ZERO
         BZ    DDX                    SKIP OVERRIDES
         CLI   0(R1),0             IF LENGTH > 255
         BNE   DDX                    SKIP OVERRIDES
         CLI   1(R1),8*6           IF LIST NOT LONG ENOUGH FOR 6 DD'S
         BL    DDX                    SKIP OVERRIDE
         CLI   42(R1),0  (8*5+2)   IF SLOT EMPTY
         BE    DDUT1                  SKIP OVERRIDE
         MVC   PRTDD,42(R1)        COPY DDNAME FOR SYSPRINT
DDUT1    CLI   1(R1),8*8           IF LIST NOT LONG ENOUGH FOR 8 DD'S
         BL    DDX                    SKIP OVERRIDE
         CLI   58(R1),0  (8*7+2)   IF SLOT EMPTY
         BE    DDX                    SKIP OVERRIDE
         MVC   UT1DD,58(R1)        COPY DDNAME FOR SYSUT1
DDX      DS    0H
         SPACE 1
***********************************************************************
*                                                                     *
*         OPEN SYSPRINT IF DDNAME SYSPRINT IS ALLOCATED               *
*                                                                     *
***********************************************************************
         SPACE 1
         SLR   R4,R4               ZERO R4 TO INDICATE NO SYSUT1
         SLR   R5,R5               ZERO R5 TO INDICATE NO SYSPRINT
         CLI   OPTQ,C'Q'           IF THERE WAS A Q IN PARM
         BE    PRTX                  SKIP SYSPRINT
         LA    R5,PRTDCBW
         MVC   0(PRTDCBL,R5),PRTDCB
         CLI   PRTDD,0             IF SYSPRINT DDNAME OVERRIDE
         BE    *+10                  THEN
         MVC   DDNAM(8,R5),PRTDD     CHANGE DDNAME IN DCB
         LA    R1,DDNAM(,R5)       POINT TO DDNAME FOR DEVTYPE
         DEVTYPE (1),DEVAREA       CHECK FOR DDNAME IN TIOT
         LR    R0,R5               SAVE R5
         SLR   R5,R5               ZERO R5 TO INDICATE NO SYSPRINT
         LTR   R15,R15             IF DEVTYPE SAYS DDNAME NOT IN TIOT
         BNZ   PRTX                  DON'T USE SYSPRINT
         LR    R5,R0               RESTORE R5 AND USE SYSPRINT
         LA    R15,PRTEXIT         GET ADDRESS OF PRTEXIT
         ST    R15,PRTEXLST        STORE ADDRESS IN PRTEXLST
         LA    R15,PRTEXLST        GET ADDRESS OF PRTEXLST
         MVI   0(R15),X'85'        MARK AS OPEN EXIT AND LAST ENTRY
         STCM  R15,7,EXLSA(R5)     EXLST=PRTEXLST, PRTEXLST -> PRTEXIT
         MVI   OPENOUT,X'80'                                    GP18035
         OPEN  ((R5),OUTPUT),MF=(E,OPENOUT)                     GP18035
*        TM    OFLGS(R5),X'10'     IF OPEN FAILED (DDNAME NOT PRESENT)
*        BNO   EXIT                  EXIT
*---------------------------------------------------------------------*
*   The printer output characteristics were either defaulted, or set  *
*     by the user on the DD.                                          *
*   To accommodate all reasonable formats, we set variable PRTIX to   *
*     0 for RECFM=U, to 4 for F, and 8 for V or D (0 offset for len). *
*   For easier processing, we set the maximum data length into a      *
*     full-word variable PRTMXL (avoid LRECL=X complications)         *
*---------------------------------------------------------------------*
         SLR   R14,R14                                          GP18035
         SLR   R15,R15            PRESET FOR RECFM=U            GP18035
         ICM   R14,3,BLKSI(R5)    LOAD MAX BLOCKSIZE FOR U      GP18035
         TM    RECFM(R5),X'C0'    U ?                           GP18035
         BO    STPRTF               SET INDEX = 0               GP18035
         TM    RECFM(R5),X'10'    IF NOT BLOCKED                CB18048
         BZ    *+8                   DON'T USE LRECL            CB18048
         ICM   R14,3,LRECL(R5)    LOAD MAX RECORD LENGTH        GP18035
         LA    R15,4              PRESET FOR F                  GP18035
         TM    RECFM(R5),X'80'    F ?                           GP18035
         BNZ   STPRTF               YES                         GP18035
         LA    R15,8              SET FOR V OR D                GP18035
         SH    R14,=H'4'          SET MAX DATA LENGTH           GP18035
STPRTF   STH   R15,PRTIX          SET PRINT BRANCH INDEX        GP18035
         ST    R14,PRTMXL         SET MAX PRINTER DATA LENGTH   GP18035
PRTX     DS    0H
         SPACE 1
***********************************************************************
*                                                                     *
*         OPEN SYSUT1                                                 *
*                                                                     *
***********************************************************************
         SPACE 1
         LA    R4,UT1DCBW
         MVC   0(UT1DCBL,R4),UT1DCB
         CLI   UT1DD,0             IF SYSUT1 DDNAME OVERRIDE
         BE    *+10                  THEN
         MVC   DDNAM(8,R4),UT1DD     CHANGE DDNAME IN DCB
         LA    R1,DDNAM(,R4)       POINT TO DDNAME FOR DEVTYPE
         DEVTYPE (1),DEVAREA       CHECK FOR DDNAME IN TIOT
         LR    R0,R4               SAVE R4
         SLR   R4,R4               ZERO R4 TO INDICATE NO SYSUT1
         LTR   R15,R15             IF DEVTYPE SAYS DDNAME NOT IN TIOT
         BNZ   PRNT                  EXIT WITH ERROR            CB18048
         LR    R4,R0               RESTORE R5 AND USE SYSUT1
*              BEGIN CHECK FOR CONCATENATION                    CB18048
         L     R1,16               CVTPTR                       CB18048
         L     R1,0(,R1)           TCB WORDS                    CB18048
         L     R1,4(,R1)           CURRENT TCB                  CB18048
         L     R1,12(,R1)          TIOT FROM TCBTIO-TCB         CB18048
         LA    R1,24(,R1)          TOIENTRY-TIOT                CB18048
DDLOOP   CLI   0(R1),0             TIOELNGH ZERO, END OF TIOT   CB18048
         BE    PRNT                YES, DDNAME NOT IN TIOT      CB18048
*        PRECEDING BRANCH NEVER HAPPENS SINCE DEVTYPE CONFIRMED CB18048
         TM    1(R1),X'80'         TIOESTTA,TIOSLTYP            CB18048
         BO    DDNEXT              YES, ENTRY NOT IN USE        CB18048
         CLC   4(8,R1),DDNAM(R4)   DOES TIOEDDNM MATCH SYSUT1?  CB18048
         BE    DDFOUND             YES, BRANCH                  CB18048
DDNEXT   SLR   R15,R15             PREPARE FOR IC               CB18048
         IC    R15,0(,R1)          TIOELNGH, GET OFFSET TO NEXT CB18048
         LA    R1,0(R15,R1)        POINT TO NEXT ENTRY IN TIOT  CB18048
         B     DDLOOP              KEEP LOOKING                 CB18048
DDFOUND  IC    R15,0(,R1)          GET OFFSET TO NEXT           CB18048
         LA    R1,0(R15,R1)        POINT TO NEXT ENTRY IN TIOT  CB18048
         TM    1(R1),X'80'         TIOESTTA,TIOSLTYP            CB18048
         BO    NOTCAT              YES, ENTRY NOT IN USE        CB18048
         CLI   4(R1),C' '          IS NEXT TIOEDDNM BLANK?      CB18048
         BNE   NOTCAT              NO, IT'S NOT A CONCATENATION CB18048
         MVI   RETCODE+3,16        CONCATENATION NOT SUPPORTED  CB18048
         SR    R4,R4               SYSUT1 IS NOT OPEN           CB18048
         B     PRNT                ISSUE MESSAGE AND QUIT       CB18048
NOTCAT   LA    R15,UT1ABEND        POINT TO OPEN ABEND EXIT
         ST    R15,EXITLST         STORE IN 1ST WORD OF EXITLIST
         MVI   EXITLST,X'11'       MARK AS OPEN ABEND EXIT (MVS)
         LA    R15,JFCB            GET ADDRESS OF JFCB
         ST    R15,EXITLST+4       STORE ADDRESS IN EXITLST 2ND WORD
         MVI   EXITLST+4,X'87'     MARK AS JFCB PTR AND LAST ENTRY
         LA    R15,EXITLST         GET ADDRESS OF EXITLST
         STCM  R15,7,EXLSA(R4)     EXLST=EXITLST, EXITLST -> JFCB
         MVI   OPEN,X'80'                                       GP18035
         RDJFCB ((R4)),MF=(E,OPEN)                              GP18035
         SPACE 1
*---------------------------------------------------------------------*
*   For older systems (MVS, MVT) we need to check whether the data    *
*     set is empty by looking at DS1LSTAR (unless new-fangled type)   *
*                                                                     *
*   While we have the DSCB, we can also check for PS vs. PO, and      *
*     do a member look-up with a BPAM FIND or BLDL.                   *
*   Use of a DCB abend exit is undesirable in an environment where    *
*     this module is called as a subroutine (e.g., the DCB could be   *
*     left in a half-open uncloseable state)                          *
*---------------------------------------------------------------------*
         L     R14,PATCAM         GET THE CAMLST FLAGS          GP18035
         LA    R15,JFCBDSNM       POINT TO THE DS NAME          GP18035
         LA    R0,JFCBVOLS        POINT TO THE FIRST SERIAL     GP18035
         LA    R1,DS1FMTID        POINT TO THE DESIRED RETURN   GP18035
         STM   R14,R1,CAMLIST     COMPLETE THE LIST             GP18035
         OBTAIN CAMLIST           GET THE DSCB                  GP18035
         LTR   R15,R15            SUCCESSFUL ?                  GP18035
         BH    OPFAIL               NO                          GP18035
         TM    FM1SMSFG,X'07'     NEWFANGLED ?                  GP18035
         BNZ   OPSEQ                YES; LSTAR USELESS          GP18035
         TM    FM1SMSFG,X'08'     PDS/E?                        GP18035
         BNZ   OPPO                 YES; LSTAR USELESS          GP18035
         CLI   DS1DSORG+1,0       OLD NEWFANGLED STUFF ?        GP18035
         BNZ   OPSEQ                YES                         GP18035
         MVI   RETCODE+3,4        PRESET RETURN CODE FOR EMPTY  GP18035
         ICM   R1,7,DS1LSTAR      ANYTHING IN LSTAR?            GP18035
         BZ    PRNT                 SKIP OPEN, ETC.             GP18035
         TM    DS1DSORG,254-DS1DSGPS-DS1DSGPO  NON-SEQUENTIAL ? GP18035
         BNZ   OPSEQ              MAY BOMB                      GP18035
         TM    DS1DSORG,DS1DSGPS+DS1DSGPO  SEQ OR PO ?          GP18035
         BZ    OPSEQ              MAY BOMB                      GP18035
         TM    DS1DSORG,DS1DSGPO  PARTITIONED?                  GP18035
         BZ    OPSEQ                                            GP18035
         SPACE 1
OPPO     LA    R4,PO1DCBW         POINT TO WORKING DCB          GP18035
         MVC   0(PO1DCBL,R4),PO1DCB   SET FOR                   GP18035
         CLI   UT1DD,0             IF SYSUT1 DDNAME OVERRIDE    GP18035
         BE    *+10                  THEN                       GP18035
         MVC   DDNAM(8,R4),UT1DD     CHANGE DDNAME IN DCB       GP18035
         LA    R15,EXITLST         EXIT LIST                    GP18035
         STCM  R15,7,EXLSA(R4)       BUT JFCB NOT USED          GP18035
         MVI   OPEN,X'80'          OPEN BPAM                    GP18035
         TM    JFCBIND1,JFCPDS    JFCB WITH MEMBER NAME ?       GP18035
         BZ    OPPORD               NO; LOOK AT FIRST DE        GP18035
         NI    JFCBIND1,255-JFCPDS  RESET MEMBER NAME FLAG      GP18035
         OI    JFCBTSDM,JFCNWRIT    DO NOT WRITE JFCB BACK      BG18036
         OPEN  ((R4),INPUT),TYPE=J,MF=(E,OPEN)                  GP18035
         TM    OFLGS(R4),X'10'     IF OPEN FAILED               GP18035
         BZ    OPFAIL                THEN                       GP18035
*EXTRA*  OI    JFCBIND1,JFCPDS     RESTORE MEMBER NAME FLAG     GP18035
         FIND  (R4),JFCBELNM,D     LOOK FOR THE MEMBER          GP18035
         BXH   R15,R15,MEMNTF        NOT FOUND                  GP18035
         B     OPPOCOM                                          GP18035
OPPORD   OPEN  ((R4),INPUT),TYPE=J,MF=(E,OPEN)                  GP18035
         TM    OFLGS(R4),X'10'     IF OPEN FAILED               GP18035
         BZ    OPFAIL                THEN                       GP18035
         MVC   RDECB(PATDECBL),PATDECB  COPY OPTION BITS        GP18035
         LA    R2,DEWORK                                        GP18035
         READ  RDECB,SF,(R4),(R2),256,MF=E                      GP18035
         CHECK RDECB                                            GP18035
         CLC   DEWORK(10),=X'000EFFFFFFFFFFFFFFFF'  EMPTY PDS ? GP18035
         BE    UT1EOF                       YES; SAY SO         GP18035
         B     UT1NTE             RETURN NOT EMPTY              GP18035
OPPOCOM  CLOSE MF=(E,OPEN)                                      GP18035
         SPACE 1
OPSEQ    LA    R4,UT1DCBW                                       GP18035
         MVI   OPEN,X'80'
         OPEN  ((R4),INPUT),MF=(E,OPEN)
         TM    OFLGS(R4),X'10'     IF OPEN FAILED
         BNZ   UT1X                  THEN
OPFAIL   CLOSE MF=(E,OPEN)        JUST IN CASE                  GP18035
         SLR   R4,R4                 ZERO R4 TO INDICATE NO SYSUT1
         TM    STATUS,FGSNOMEM       IF IT WAS MEMBER NOT FOUND
         BZ    PRNT                    THEN
MEMNTF   MVI   RETCODE+3,8             SET RC TO 8
         B     PRNT                  SKIP GET
UT1X     DS    0H
         SPACE 1
***********************************************************************
*                                                                     *
*         READ FIRST RECORD OR GO TO UT1EOF STRAIGHT FROM GET         *
*                                                                     *
***********************************************************************
         SPACE 1
         MVI   RETCODE+3,4         SET RETURN CODE TO 4 FOR EMPTY
         GET   (R4)
UT1NTE   MVI   RETCODE+3,0         SET RETURN CODE TO 0 FOR NOT EMPTY
UT1EOF   DS    0H
         SPACE 1
***********************************************************************
*                                                                     *
*         ISSUE MESSAGE TO SYSPRINT                                   *
*                                                                     *
***********************************************************************
         SPACE 1
PRNT     LTR   R5,R5               IF SYSPRINT IS NOT OPEN
         BZ    WTOT                  SKIP MESSAGE
*---------------------->  PRINT HEADER TO SYSPRINT <-----------* SG1801
         BAL   R14,GOCLEAR   CLEAR PRINT LINE; SET RDW          GP18035
         #PUT  MSGFR              WRITE FRAME                   GP18035
         LA    R1,MSG16                                         CB18048
         CLI   RETCODE+3,16       CONCATENATION ?               CB18048
         BNL   PRTP                 SHOW MSG12                  CB18048
         LA    R1,MSG12                                         GP18035
         CLI   RETCODE+3,12       MISSING DD ?                  GP18035
         BNL   PRTP                 SHOW MSG12                  GP18035
*---------------------->  PRINT HEADER TO SYSPRINT <-----------* SG1801
         MVC   MSGLINE+1(12),MSGFR+4+1                          GP18035
         MVC   MSGLINE+12(10),=C'PROCESSING'                    GP18035
         MVC   MSGLINE+12+10+1(44),JFCBDSNM   ADD DATA SET NAME GP18035
         LA    R1,MSGLINE+12+10+1  START BLANK SCAN             GP18035
         TRT   0(45,R1),TRTBLANK    FIND END                    GP18035
         CLI   JFCBELNM,C' '      HAVE A MEMBER OR GDG ?        GP18035
         BNH   SKIPMEM              NO                          GP18035
         MVI   0(R1),C'('         FRAME IT                      GP18035
         MVC   1(8,R1),JFCBELNM   ADD NAME                      GP18035
         TRT   0(10,R1),TRTBLANK  FIND END                      GP18035
         MVI   0(R1),C')'         FRAME                         GP18035
         LA    R1,1(,R1)                                        GP18035
SKIPMEM  CLI   JFCBVOLS,C' '      ANY SERIAL ?                  GP18035
         BNH   PRINTDSN             NO; PRINT CURRENT LINE      GP18035
         MVC   1(2,R1),=C'ON'                                   GP18035
         MVC   4(6,R1),JFCBVOLS   SHOW WHERE                    GP18035
PRINTDSN #PUT  MSGRDW             AND PRINT LINE                GP18035
*---------------------->  PRINT HEADER TO SYSPRINT <-----------* SG1801
         L     R6,RETCODE                                       GP18035
         L     R1,MSGTAB(R6)      GET APPROPRIATE MESSAGE       GP18035
PRTP     #PUT  (1)                                              GP18035
*---------------------->  PRINT HEADER TO SYSPRINT <-----------* SG1801
         #PUT  MSGFR                                            GP18035
*---------------------->  PRINT HEADER TO SYSPRINT <-----------* SG1801
         MVI   MSGLINE,X'40'                                     SG1801
         MVC   MSGLINE+1(L'MSGLINE-1),MSGLINE                    SG1801
         MVC   MSGLINE+1(15),=C'EMPTYTST - V1.2'                 SG1801
         MVC   MSGLINE+20(19),=C'Time of Execution: '            SG1801
         MVC   MSGLINE+40(23),HEADDATE                           SG1801
         #PUT  MSGRDW                                           GP18035
*---------------------->  PRINT HEADER TO SYSPRINT <-----------* SG1801
         MVI   MSGLINE,X'40'                                     SG1801
         MVC   MSGLINE+1(L'MSGLINE-1),MSGLINE                    SG1801
         MVC   MSGLINE+1(15),=C'EMPTYTST - V1.2'                 SG1801
         MVC   MSGLINE+20(9),=C'Jobname: '                       SG1801
         MVC   MSGLINE+30(8),NJOB                                SG1801
         MVC   MSGLINE+40(9),=C'Stepname:'                       SG1801
         MVC   MSGLINE+51(8),PSTN                                SG1801
         MVC   MSGLINE+61(9),=C'Jobstep: '                       SG1801
         MVC   MSGLINE+71(8),JSTN                                SG1801
         #PUT  MSGRDW                                           GP18035
         SPACE 1
***********************************************************************
*                                                                     *
*         ISSUE MESSAGE TO CONSOLE IF PARM=W                          *
*                                                                     *
***********************************************************************
         SPACE 1
WTOT     CLI   OPTW,0              IF PARM HAS NO W
         BE    WTOX                  SKIP WTO
         CLI   OPTC,0              IF PARM HAS W AND C
         BE    WTOK                  AND
         CLI   RETCODE+3,0           RETCODE IS 0
         BE    WTOX                  SKIP WTO
WTOK     MVI   WTOW,X'40'          CLEAR OUTPUT AREA            GP18035
         MVC   WTOW+1(L'WTOW-1),WTOW                            GP18035
         L     R6,RETCODE                                       GP18035
         L     R7,SELWTO(R6)       POINT TO MESSAGE HEAD        GP18035
         L     R8,SUFWTO(R6)       POINT TO MESSAGE END         GP18035
         LH    R14,0(,R7)          GET TEXT LENGTH              GP18035
         BCTR  R14,0                                            GP18035
         EX    R14,EXMVCWTO        MOVE TEXT TO WORK AREA       GP18035
         LTR   R8,R8               IS THERE A SUFFIX?           GP18035
         BZ    WTOI                  NO; WTO THE MESSAGE        GP18035
         LA    R1,WTOW+3(R14)      START OF INSERTION(S)        GP18035
         MVC   0(44,R1),JFCB       ADD DSN TO MESSAGE - JFCBDSNM
         TRT   0(45,R1),TRTBLANK   POSITION TO END              GP18035
         CLI   JFCB+44,C' '        JFCBELNM (MEMBER OR GDG)     GP18035
         BNH   WTO5                  SKIP IF NONE
         MVI   0(R1),C'('
         MVC   1(8,R1),JFCB+44     JFCBELNM (MEMBER NAME)
         TRT   0(10,R1),TRTBLANK   POINT TO END OF MEMBER       GP18035
         MVI   0(R1),C')'
         LA    R1,1(,R1)           POINT PAST RIGHTMOST NONBLANK
WTO5     CLI   JFCB+118,C' '       IF VOLUME IS BLANK -JFCBVOLS
         BE    WTO5A                SKIP VOLUME (DUMMY)
         MVC   1(9,R1),=C'ON VOLUME'
         MVI   10(R1),X'40'                                      SG1801
         MVC   11(6,R1),JFCB+118   VOLUME FROM JFCB JFCBVOLS
         LA    R1,17(,R1)          POINT PAST RIGHTMOST NONBLANK
         MVI   17(R1),X'40'                                      SG1801
WTO5A    LH    R14,0(,R8)          GET LENGTH OF SUFFIX - 1     GP18035
         EX    R14,EXMVCSUF        MOVE IT                      GP18035
         LA    R0,WTOW             WORK AREA ADDRESS            GP18035
         SR    R1,R0               LENGTH LESS SUFFIX           GP18035
         LA    R1,2(R14,R1)        WTO LENGTH                   GP18035
         STH   R1,WTOW             STASH COMPLETE LENGTH        GP18035
         LA    R1,WTOW(R1)         RESTORE END ADDRESS          GP18035
WTOI     DS    0H
         MVC   0(4,R1),WTMROUT     DESCRIPTOR AND ROUTING CODES GP18035
         WTO   MF=(E,WTOW)
WTOX     B     CLSE                                             GP18035
         SPACE 1
EXMVCWTO MVC   WTOW(*-*),0(R7)     MOVE LENGTH AND TEXT         GP18035
EXMVCSUF MVC   1(*-*,R1),2(R8)     MOVE SUFFIX                  GP18035
SELWTO   DC    A(WTM00,WTM04,WTM08,WTM12,WTM16) MESSAGE TEXT    GP18035
SUFWTO   DC    A(WTS00,WTS04,WTS08,0,0)    MESSAGE SUFFIX       GP18035
         SPACE 1
***********************************************************************
*                                                                     *
*         CLOSE SYSUT1                                                *
*                                                                     *
***********************************************************************
         SPACE 1
CLSE     LTR   R4,R4               IF SYSUT1 NOT OPEN
         BZ    CLSP                  SKIP CLOSE
         CLOSE MF=(E,OPEN)                                      GP18035
         BAL   R6,FREEPOOL
         SPACE 1
CLSP     LTR   R5,R5               IF SYSPRINT NOT OPEN
         BZ    EXIT                  SKIP CLOSE
         CLOSE MF=(E,OPENOUT)                                   GP18035
         LR    R4,R5
         BAL   R6,FREEPOOL
         SPACE 1
EXIT     L     R2,RETCODE
         LR    R1,R13             POINT TO ADDRESS TO FREEMAIN
         L     R0,WORKSIZ         LENGTH TO FREEMAIN
         L     R13,4(,R13)        RESTORE ORIGINAL R13
         FREEMAIN R,A=(1),LV=(0)
*        DROP  R9
         LR    R15,R2
         LM    0,12,20(R13)
         L     R14,12(,R13)
         BR    R14
         SPACE 1
FREEPOOL TM    BUFCA+2(R4),1      FREEPOOLED BEFORE?            GP18035
         BNZR  R6                   YES; DON'T DO IT AGAIN      GP18035
         ICM   R1,7,BUFCA(R4)     DIRTY POOL ?                  GP18035
         BZR   R6                   YES; DON'T ABEND (30A/90A)  GP18035
         FREEPOOL (R4)
         BR    R6
         SPACE 2
***********************************************************************
*                                                                     *
*   PRINT SUBROUTINE                                                  *
*    INPUT: R1 : AL2(LEN+4,0),CC,TEXT(<=120)                          *
*   BUILDS APPROPRIATE RECORD IN DCB BUFFER                           *
*    FOR MACHINE CODE, USES X'09' WRITE/SPACE                         *
*                                                                     *
***********************************************************************
         SPACE 1
GOPRINT  STM   R14,R7,SUBSAVE                                   GP18035
         L     R3,PRTMXL     GET MAXIMUM DATA LENGTH            GP18035
         LH    R7,0(,R1)     GET CALLER'S LENGTH                GP18035
         SH    R7,=H'4'        CALLER'S RDW                     GP18035
         LA    R6,4(,R1)     SKIP RDW                           GP18035
         TM    RECFM(R5),X'06'  CONTROL CHARACTER               GP18035
         BNZ   GOPRINTA                                         GP18035
         LA    R6,1(,R6)     SKIP CC                            GP18035
         SH    R7,=H'1'      NO CC                              GP18035
GOPRINTA CLI   PRTIX+1,4     TEST RECFM                         CB18048
         BE    GOPRINTB        FOR F, KEEP DCBLRECL             GP18037
         CR    R3,R7         KEEP THE MINIMUM                   GP18035
         BNH   *+6                                              GP18035
         LR    R3,R7         DESIRED DATA LENGTH                GP18035
         STH   R3,LRECL(R5)  PLACE RECORD LENGTH INTO DCB       GP18035
GOPRINTB PUT   (R5)          GET A RECORD SPACE                 GP18035
         LR    R2,R1         PRESET OUTPUT ADDRESS              GP18035
         ICM   R7,8,=X'40'   REQUEST BLANK FILL                 GP18035
         LH    R15,PRTIX     GET BRANCH INDEX                   GP18035
         B     GOPRINTT(R15)   HANDLE BY RECFM TYPE             GP18035
GOPRINTT  B    GOPRTF        REALLY U                           GP18035
          B    GOPRTF                                           GP18035
*NEXT*    B    GOPRTV                                           GP18035
GOPRTV   LA    R0,4(,R3)     LENGTH WITH RDW                    GP18035
         SLL   R0,16         POSITION HIGH                      GP18035
         STCM  R0,15,0(R1)   BUILD RDW                          GP18035
         LA    R2,4(,R1)                                        GP18035
         LR    R1,R2         FOR MCC                            GP18035
GOPRTF   MVCL  R2,R6         MOVE TEXT WITH FILL                GP18035
         TM    RECFM(R5),X'02'  MCC?                            GP18035
         BZ    GOPRINTX           NO; DONE                      GP18035
         MVI   0(R1),X'09'   WRITE/SPACE MCC                    GP18035
GOPRINTX LM    R14,R7,SUBSAVE                                   GP18035
         SPACE 1
*---------------------------------------------------------------------*
*   Clear print line for next user                                    *
*---------------------------------------------------------------------*
GOCLEAR  MVI   MSGLINE,C' '                                     GP18035
         MVC   MSGLINE+1(L'MSGLINE-1),MSGLINE  CLEAR PRINT LINE GP18035
         MVC   MSGRDW(4),=AL2(L'MSGLINE+4,0)                    GP18035
         BR    R14                                              GP18035
         SPACE 1
***********************************************************************
*                                                                     *
*         DCB OPEN EXIT FOR SYSPRINT                                  *
*                                                                     *
*         SET ATTRIBUTES IF NEEDED FOR SYSOUT OR TERMINAL OR DUMMY    *
*                                                                     *
***********************************************************************
         SPACE 1
         PUSH  USING                                            GP18035
         DROP  ,                                                GP18035
         USING PRTEXIT,R15                                      GP18035
PRTEXIT  CLI   RECFM(R1),0         IF NO RECFM
         BNE   *+8                   THEN
         MVI   RECFM(R1),X'94'       SET RECFM=FBA
         SPACE 1
         SLR   R3,R3                                            GP18035
         ICM   R3,3,LRECL(R1)     LOAD RECORD LENGTH            GP18035
         BNZ   PRTEXBK              USE USER'S                  GP18035
         LA    R3,120             DEFAULT BLOCK SIZE (NO CC)    GP18035
         TM    RECFM(R1),X'06'    CARRIAGE CONTROL?             GP18035
         BZ    *+8                  NO                          GP18035
         LA    R3,1(,R3)          INCREASE DEFAULT              GP18035
         TM    RECFM(R1),X'80'    RECFM=F OR U ?                GP18035
         BNZ   PRTEXBK              YES; RECORD LENGTH SET      GP18035
         LA    R3,4(,R3)          ALLOW FOR RDW                 GP18035
*NEXT*   B     PRTEXBK                                          GP18035
         SPACE 1
PRTEXBK  LH    R4,BLKSI(,R1)      GET BLOCK SIZE                GP18035
         LTR   R4,R4              ANY BLOCK SIZE?               GP18035
         BNZ   PRTEXST              YES                         GP18035
         LR    R4,R3              USE BLKSIZE = LRECL           GP18035
         TM    RECFM(R1),X'80'    RECFM=U OR F ?                GP18035
         BNZ   PRTEXST              YES; DONE                   GP18035
         LA    R4,4(,R4)          ADD BDW TO BLOCK              GP18035
         SPACE 1
PRTEXST  TM    RECFM(R1),X'10'    IF NOT BLOCKED                CB18048
         BZ    *+8                  DON'T SET LRECL             CB18048
         STH   R3,LRECL(,R1)      SET RECORD LENGTH             GP18035
         STH   R4,BLKSI(,R1)        AND BLOCK SIZE              GP18035
PRTEXBR  BR    R14
         POP   USING                                            GP18035
         SPACE 1
***********************************************************************
*                                                                     *
*         DCB OPEN ABEND EXIT FOR SYSUT1                              *
*                                                                     *
***********************************************************************
         SPACE 1
         PUSH  USING                                            GP18035
UT1ABEND DS    0H
         L     R8,0(,R1)           GET COMPLETION CODE
         N     R8,=A(X'FFF0FF00')
         CL    R8,=A(X'01301800')  IS IT AN 013-18 ABEND
         BE    UT1MEMBR            YES, BRANCH
         MVI   4(R1),0             NO, ABNORMALLY TERMINATE
         BR    R14
UT1MEMBR OI    STATUS,FGSNOMEM     INDICATE MEMBER NOT FOUND
         MVI   3(R1),4             IGNORE THE ABEND
         BR    R14
         DROP  R9
         POP   USING                                            GP18035
         EJECT ,
         TITLE 'S U B S T C K  ***  MVS STCKCONV FACILITY'
***********************************************************************
*   THIS ROUTINE IS INVOKED BY (LOCAL) MACRO $TCKCONV AND PRODUCES    *
*   THE SAME OUTPUT AS IBM'S STCKCONV ROUTINE UNDER ESA AND LATER.    *
*   ADAPTED FOR INLINE USE.                                           *
***********************************************************************
*   PROCESS DATE - SHIFT TOD CLOCK AND DIVIDE AS PER PoOPS TO GET     *
*   DAYS SINCE BASE, WHICH IS 1900/01/01 FOR MVS & LATER SYSTEMS      *
***********************************************************************
*   Input:                                                            *
*   Time format in TIMETYPE                                           *
*    01 BIN or MIC                                                    *
*    02 DEC or MIC                                                    *
*    20 STCK format                                                   *
*                                                                     *
*                                                                     *
*   Date format in DATETYPE                                           *
*    00 YYYYDDD                                                       *
*    01 MMDDYYYY                                                      *
*    02 DDMMYYYY                                                      *
*    03 YYYYMMDD                                                      *
*                                                                     *
*    40 local time                                                    *
***********************************************************************
SUBSTCK  STM   R14,R12,12(R13)    SAVE A ;LOT                   GP18035
         STCK  PLTOD                                            GP18035
         LM    R2,R3,PLTOD   GET TOD CLOCK VALUE                GP18035
         TM    DATETYPE,DATLOCAL  RETURN LOCAL TIME ?           GP18035
         BZ    USEGMT                                           GP18035
         L     R1,CVTPTR                                        GP18035
         USING CVT,R1                                           GP18035
         TM    CVTDCB,X'80'  MVS OR IS IT LATER ?               GP18035
         BNZ   ADJNEW        OLD; USE TIME ZONE ADJUST          GP18035
         AL    R2,CVTTZ      ADD OLD VERSION OF LOCAL TIME      GP18035
         B     USEGMT        SKIP AROUND                        GP18035
ADJNEW   L     R1,CVTEXT2    GET CVT EXTENSION                  GP18035
         USING CVTXTNT2,R1   MAP CVT EXTENSION                  GP18035
         AL    R2,X'38'(,R1)    ADD CVTLDTOL  ADD HIGH/LEFT     GP18035
         AL    R3,X'3C'(,R1)    ADD CVTLDTOR  ADD LOW/RIGHT     GP18035
         BNO   USEGMT        NO CARRY                           GP18035
         AL    R2,=F'1'      PROPAGATE CARRY                    GP18035
         DROP  R1                                               GP18035
USEGMT   SRDL  R2,24         ADJUST                             GP18035
         D     R2,=X'0141DD76'  GET DAYS SINCE 1900.001 PER PoOPS
         ST    R3,DAYS                                          GP18035
         ST    R2,MICS                                          GP18035
         C     R3,=F'365'    IN FIRST YEAR ?                    GP18035
         BNL   NOTBASE       NO                                 GP18035
         MVC   YEAR,=F'1900'                                    GP18035
         LA    R3,1(,R3)     FIX UP                             GP18035
         ST    R3,DAY        SET 1900.DDD                       GP18035
         B     MAKEDATE                                         GP18035
         SPACE 2                                                GP18035
NOTBASE  S     R3,=F'365'    CHANGE BASE TO 1901                GP18035
         ST    R3,DAYS       SAVE                               GP18035
         SLR   R2,R2                                            GP18035
         D     R2,=F'1461'   GET NUMBER OF LEAP YEAR EPOCHS     GP18035
         LR    R7,R3         SAVE NUMBER OF LEAP YEARS          GP18035
         LR    R6,R2         SAVE NUMBER OF YEARS IN CURR. 4 YEAR CYCLE
         LA    R0,1          DEFAULT FUDGE TO 1                 GP18035
         C     R2,=F'1460'   LAST DAY OF LEAP YEAR ?            GP18035
         BNE   CALCYR        NO                                 GP18035
         BCTR  R2,0                                             GP18035
         LR    R6,R2         UPDATE                             GP18035
         LA    R0,2          SET FUDGE TO 2                     GP18035
CALCYR   LR    R3,R6                                            GP18035
         SLR   R2,R2                                            GP18035
         D     R2,=F'365'                                       GP18035
         AR    R2,R0         GET JULIAN DAY                     GP18035
         ST    R2,DAY        SAVE IT                            GP18035
         LR    R3,R6                                            GP18035
         SLR   R2,R2                                            GP18035
         D     R2,=F'365'    GET YEARS IN R3                    GP18035
         LR    R2,R7         LEAPS                              GP18035
         SLA   R2,2          *4                                 GP18035
         AR    R3,R2         ADD                                GP18035
         A     R3,=F'1901'   ADD BASE                           GP18035
         ST    R3,YEAR                                          GP18035
MAKEDATE L     R2,YEAR                                          GP18035
         TM    DATETYPE,3    NEED TO CONVERT DAY TO MONTH/DAY ? GP18035
         BNZ   MAKEDMON      YES                                GP18035
         MH    R2,=H'1000'                                      GP18035
         A     R2,DAY        ADD DAY IN YEAR                    GP18035
         CVD   R2,DB         PACK                               GP18035
         L     R2,DB+4                                          GP18035
         SRL   R2,4          REMOVE SIGN                        GP18035
         ST    R2,PLDATE     RETURN DATE                        GP18035
         B     GETTIME                                          GP18035
         SPACE 1                                                GP18035
MAKEDMON L     R1,DAY        GET BINARY DAY                     GP18035
         SLR   R0,R0         SET FOR NO LEAP DAY ADJUSTMENT     GP18035
*  N.B.: THIS WORKS UNTIL 2099 ONLY                             GP18035
         EX    R2,EXISLEAP   TEST FOR MULTIPLE OF FOUR          GP18035
         BNZ   NOTALEAP      BRANCH IF NOT A LEAP YEAR          GP18035
         CH    R1,=H'60'     IS THIS ON, BEFORE, OR AFTER LEAP DAY?
         BL    NOTALEAP      BEFORE; TREAT NORMALLY             GP18035
         BH    ONELESS       AFTER; ADJUST DAY                  GP18035
         LA    R0,1          SET LEAP DAY ADJUSTMENT            GP18035
ONELESS  BCTR  R1,0          ONE LESS TO FIX DAYS AFTER LEAP    GP18035
NOTALEAP LA    R4,DATETABL   GET TABLE OF CUMULATIVE DAYS       GP18035
         LR    R5,R4         SAVE                               GP18035
FINDMON  CH    R1,2(,R4)     IN THIS MONTH?                     GP18035
         BNH   FOUNDMON      YES; PROCESS                       GP18035
         LA    R4,2(,R4)     INCREMENT                          GP18035
         B     FINDMON       AND TRY AGAIN                      GP18035
FOUNDMON SH    R1,0(,R4)     SUBTRACT DAYS IN PRIOR MONTHS      GP18035
         AR    R1,R0         ADJUST 1 IF LEAP DAY               GP18035
         LA    R4,2(,R4)     FINAGLE TO MAKE MONTH COME OUT RIGHT
         SR    R4,R5         GET OFFSET TO MONTH                GP18035
         SRL   R4,1          GET MONTH (1-12)                   GP18035
*  WE NOW HAVE FULL YEAR IN R2, MONTH IN R4, AND DAY IN R1      GP18035
         TM    DATETYPE,X'03'   YYYYMMDD ?                      GP18035
         BO    DATEMISO                                         GP18035
         TM    DATETYPE,X'01'   MMDDYYYY                        GP18035
         BZ    DATEMDY                                          GP18035
         MH    R4,=H'100'                                       GP18035
         AR    R4,R1                                            GP18035
         B     DATEMCOM                                         GP18035
DATEMDY  MH    R1,=H'100'                                       GP18035
         AR    R4,R1                                            GP18035
DATEMCOM MH    R4,=H'10000'                                     GP18035
         AR    R4,R2            MMDDYYYY OR DDMMYYYY            GP18035
         B     DATEMOUT                                         GP18035
DATEMISO MH    R2,=H'100'                                       GP18035
         AR    R4,R2            YYYYMM                          GP18035
         MH    R4,=H'100'                                       GP18035
         AR    R4,R1            YYYYMMDD                        GP18035
DATEMOUT CVD   R4,DB                                            GP18035
         LM    R2,R3,DB                                         GP18035
         SRDL  R2,4          REMOVE SIGN                        GP18035
         ST    R3,PLDATE     RETURN DATE                        GP18035
         SPACE 1
***********************************************************************
*   PROCESS TIME - HAVE MICROSECONDS, BUT LOW 12 BITS LOST IN SHIFT   *
*   RESTORE BEFORE DECIDING WHETHER THEY'RE NEEDED                    *
*   BRANCH BY REQUEST TYPE TO APPROPRIATE FORMATTING                  *
***********************************************************************
GETTIME  LM    R4,R5,PLTOD   GET CLOCK VALUE BACK               GP18035
         SRDL  R4,24         FINAGLE                            GP18035
         L     R3,MICS       GET REMAINDER                      GP18035
         SLR   R2,R2         CLEAR FOR DIVIDE                   GP18035
         SLDL  R2,12         REPOSITION                         GP18035
         OR    R3,R4         REGAIN LOST BITS                   GP18035
*LOCAL*  BIX   VAL=TIMETYPE,PFX=RTIM,ERR=RTIMERR,LOC=(,BIN,DEC,MIC)
         IC    R15,TIMETYPE                                     GP18035
         LA    R0,3                                             GP18035
         NR    R15,R0        ISOLATE SIGNIFICANT PORTION        GP18035
         CH    R15,=Y(4)     VALID INDEX ?                      GP18035
         BNL   RTIMERR       NO; TOO HIGH                       GP18035
         SLL   R15,1         CONVERT INDEX TO OFFSET            GP18035
         LH    R15,*+8(R15)       LOAD LABEL OFFSET FROM BASE   GP18035
         B     EMPTYTST(R15) ENTER ROUTINE                      GP18035
         DC    AL2(RTIMERR-EMPTYTST)    1 ERROR                 GP18035
         DC    AL2(RTIMBIN-EMPTYTST)    2        BRANCH         GP18035
         DC    AL2(RTIMDEC-EMPTYTST)    3        BRANCH         GP18035
         DC    AL2(RTIMMIC-EMPTYTST)    4        BRANCH         GP18035
         SPACE 1                                                GP18035
RTIMDEC  D     R2,=F'1000000'  CONVERT TO SECONDS               GP18035
         CVD   R2,DB2        FRACTIONS                          GP18035
         SLR   R2,R2                                            GP18035
         D     R2,=F'60'     GET SECONDS                        GP18035
         ST    R2,SECS                                          GP18035
         SLR   R2,R2                                            GP18035
         D     R2,=F'60'     GET MINUTES                        GP18035
         ST    R2,MINS                                          GP18035
         SLR   R2,R2                                            GP18035
         D     R2,=F'24'                                        GP18035
         ST    R2,HOUR                                          GP18035
         CVD   R2,PLTIME     MAKE HOUR PACKED                   GP18035
         MP    PLTIME,=P'100'  MAKE ROOM FOR MINUTES            GP18035
         L     R2,MINS                                          GP18035
         CVD   R2,DB                                            GP18035
         AP    PLTIME,DB     ADD MINUTES                        GP18035
         MP    PLTIME,=P'100'  MAKE ROOM FOR SECONDS            GP18035
         L     R2,SECS                                          GP18035
         CVD   R2,DB                                            GP18035
         AP    PLTIME,DB     ADD SECONDS                        GP18035
         MP    PLTIME,=P'1000000'  ROOM FOR MICROSECONDS        GP18035
         AP    PLTIME,DB2    ADD THOSE IN                       GP18035
*0C7*    MP    PLTIME,=P'1000'     LEFT-JUSTIFY IN RESPONSE     GP18035
         LM    R2,R3,PLTIME  LOAD PACKED VALUE                  GP18035
         N     R3,=X'FFFFFFF0'  REMOVE SIGN                     GP18035
         SLDL  R2,3*4        SHIFT THREE DIGITS                 GP18035
         O     R3,=X'0000000C'  RESTORE SIGN                    GP18035
         STM   R2,R3,PLTIME  SAVE PACKED VALUE                  GP18035
         B     PGMEXIT                                          GP18035
         SPACE 1                                                GP18035
RTIMMIC  SLDL  R2,12         ALIGN MICROSECONDS IN BIT 51       GP18035
         STM   R2,R3,PLTIME  RETURN IT                          GP18035
         B     PGMEXIT                                          GP18035
         SPACE 1                                                GP18035
RTIMBIN  D     R2,=F'10000'  CONVERT TO 1/100TH SECOND          GP18035
         ST    R3,PLTIME     RETURN IT                          GP18035
         B     PGMEXIT                                          GP18035
         SPACE 1                                                GP18035
RTIMERR  MVI   RETCODE,16    INVALID PARAMETER LIST             GP18035
         SPACE 1                                                GP18035
PGMEXIT  L     R14,12(,R13)                                     GP18035
         L     R15,RETCODE                                      GP18035
         LM    R0,R12,20(R13)                                   GP18035
         BR    R14                                              GP18035
         SPACE 1                                                GP18035
EXISLEAP TM    =X'03',*-*    MULTIPLE OF FOUR?                  GP18035
         SPACE 1                                                GP18035
*  TABLE OF DAYS IN PRIOR MONTH                                 GP18035
DATETABL DC   H'0,31,59,90,120,151,181,212,243,273,304,334,365' GP18035
         SPACE 1
***********************************************************************
*                                                                     *
*         DATA AREAS                                                  *
*                                                                     *
***********************************************************************
         SPACE 1
         LTORG
         SPACE 1
         DC    0D'0'
PATCAM   CAMLST SEARCH,*-*,*-*,*-*     PATTERN FOR DSCB 1       GP18035
         ORG   PATCAM+4                ONLY NEED FLAGS          GP18035
         READ  PATDECB,SF,*-*,*-*,*-*,MF=L                      GP18035
PATDECBL EQU   *-PATDECB               LENGTH TO MOVE           GP18035
         SPACE 1
WTM00    WTO   'EMP000I EMPTYTST - RC = 00',                           *
               ROUTCDE=(4,11),MF=L
WTMROUT  EQU   *-4,4,C'X'         ROUTING/DESCRIPTOR CODES      GP18035
WTM04    WTO   'EMP004I EMPTYTST - RC = 04',                           *
               ROUTCDE=(4,11),MF=L
WTM08    WTO   'EMP008I EMPTYTST - RC = 08',                           *
               ROUTCDE=(4,11),MF=L
WTM12    WTO   'EMP012E EMPTYTST - RC = 12 ERROR OCCURRED - SYSUT1 MISS+
               ING',ROUTCDE=(4,11),MF=L
WTM16    WTO   'EMP016E EMPTYTST - RC = 16 ERROR - SYSUT1 IS CONCATENAT+
               ION',ROUTCDE=(4,11),MF=L                         CB18048
WTS00    DC    AL2(12-1),C'IS NOT EMPTY'                        GP18035
WTS04    DC    AL2(08-1),C'IS EMPTY'                            GP18035
WTS08    DC    AL2(16-1),C'MEMBER NOT FOUND'                    GP18035
         DC    0D'0'
         PRINT NOGEN
UT1DCB   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=(GL),EODAD=UT1EOF   GP18035
UT1DCBL  EQU   *-UT1DCB
         SPACE 1
PO1DCB   DCB   DDNAME=SYSUT1,DSORG=PO,MACRF=R,EODAD=UT1EOF,            *
               RECFM=U,LRECL=264,BLKSIZE=264  CHEAT  ?          GP18035
PO1DCBL  EQU   *-PO1DCB                                         GP18035
         SPACE 1
PRTDCB   DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PL)              GP18035
PRTDCBL  EQU   *-PRTDCB
         SPACE 1
MSGTAB   DC    A(MSG00,MSG04,MSG08)                             GP18035
MSG00    WTO   ' EMPTYTST - RC = 00 DATA SET IS NOT EMPTY',MF=L GP18035
MSG04    WTO   ' EMPTYTST - RC = 04 DATA SET IS EMPTY',MF=L     GP18035
MSG08    WTO   ' EMPTYTST - RC = 08 MEMBER NOT FOUND',MF=L      GP18035
MSG12    WTO   ' EMPTYTST - RC = 12 ERROR OCCURRED - SYSUT1 MISSING',  *
               MF=L                                             GP18035
MSG16    WTO   ' EMPTYTST - RC = 16 ERROR - SYSUT1 IS CONCATENATION',  *
               MF=L                                             CB18048
MSGFR    WTO   ' EMPTYTST - -------',MF=L                       GP18035
         SPACE 1
TRTBLANK DC    AL1(4),255AL1(0)   QUICK END OF STRING LOCATE    GP18035
         ORG   TRTBLANK+C' '                                    GP18035
         DC    AL1(4)             STOP ON BLANK                 GP18035
         ORG   ,                                                GP18035
         SPACE 1
         DC    0D'0'
WORKD    DSECT
         DS    18F
SUBSAVE  DS    10F                Multiple use save area        GP18035
DOUBLE   DS    D
RETCODE  DS    F
OPTC     DS    C
OPTQ     DS    C
OPTW     DS    C
STATUS   DS    C             STATUS FLAGS
FGSNOMEM EQU   X'10'           MEMBER NOT FOUND
FGSCP    EQU   X'01'           PARM IS FOR TSO CP               GP18035
NJOB     DS    CL8                     JOB NAME                  SG1801
PSTN     DS    CL8                     STEP NAME                 SG1801
JSTN     DS    CL8                     JOB STEP NAME FOR PROCS   SG1801
UT1DD    DS    CL8
PRTDD    DS    CL8
DEVAREA  DS    2F
OPEN     OPEN  (*-*),MF=L         SYSUT1 OPEN/CLOSE/RDJFCB      GP18035
OPENOUT  OPEN  (*-*),MF=L         SYSPRINT OPEN/CLOSE           GP18035
PRTEXLST DS    F
EXITLST  DS    2F
PRTMXL   DS    F             MAXIMUM PRINT DATA LENGTH          GP18035
PRTIX    DS    H             PRINT PROCESSING INDEX (0-U;4-F;8-VD)
WORKINI  EQU   *-WORKD
MSGRDW   DS    AL2(L'MSGLINE+4,0)                               GP18035
MSGLINE  DS    CL121         MESSAGE WITH CC                     SG1801
*NEW*TIMEL    TIME  LINKAGE=SYSTEM,MF=L                         GP18035
         READ  RDECB,SF,*-*,*-*,*-*,MF=L                        GP18035
TIMED    DS    CL7
DATED    DS    CL9
DATETIME DS    4F
         ORG   DATETIME
TIME     DS    CL4
         DS    CL4
DATE     DS    CL5
         DS    CL3
         DS    X        1/2                                     GP18035
HEADDATE DC    CL23' '  2/2
         SPACE 1                                                GP18035
PLTOD    DS    D             INPUT STCK VALUE                   GP18035
PLTIME   DS    D             FAKE FOR ALIGNMENT                 GP18035
PLDATE   DS    F             RETURNED DATE                      GP18035
DATETYPE DS    X             DATE TYPE (0-J, 1-MDY, 2-DMY, 3-YMD)
DATLOCAL EQU   X'40'           IF ON, ADJUST FOR LOCAL VS. GMT  GP18035
TIMETYPE DS    X             TIME TYPE (1-BIN, 2-DEC, 3-MIC)    GP18035
         SPACE 1                                                GP18035
DB       DS    D             WORK WORDS                         GP18035
DB2      DS    D             WORK WORDS                         GP18035
MICS     DS    F             REMAINDER AFTER DAY DIVISION       GP18035
DAYS     DS    F             DAYS FROM BASE                     GP18035
YEAR     DS    F             YEAR                               GP18035
DAY      DS    F             DAY IN CURRENT YEAR                GP18035
HOUR     DS    F             TIME: HOUR                         GP18035
MINS     DS    F             TIME: MINUTES                      GP18035
SECS     DS    F             TIME: SECONDS                      GP18035
         SPACE 1                                                GP18035
UT1DCBW  DS    0F,(UT1DCBL)X
PO1DCBW  DS    0F,(PO1DCBL)X                                    GP18035
PRTDCBW  DS    0F,(PRTDCBL)X
DEWORK   DS    XL256,XL8     DIRECTORY ENTRY + KEY (?)          GP18035
         ORG   DEWORK          REUSE                            GP18035
WTOW     DS    XL124 LONGEST WTO MSG (W/RDW)                    GP18035
MSGW     DS    0F,CL112 LONGEST MSG IS 108, ROUNDED TO 8-BYTE MULTIPLE
         ORG   ,                                                GP18035
         SPACE 1
CAMLIST  DS    5A                 (ONLY USING 4)                GP18035
         IECSDSL1 1               MAP FORMAT 1 DSCB             GP18035
         DS    XL5                SPACE FOR CCHHR               GP18035
FM1FLAG1 EQU   DS1NOBDB+1,1,C'X'  MORE FLAGS                    GP18035
FM1SMSFG EQU   FM1FLAG1+17,1,C'X'  SMS FLAG                     GP18035
         SPACE 1
JFCB     DS    0F                                               GP18035
         IEFJFCBN ,                                             GP18035
         DS    0D
WORKLEN  EQU   *-WORKD
         SPACE 1
BUFCA    EQU   21                                               GP18035
EODAD    EQU   33
RECFM    EQU   36
EXLSA    EQU   37
DDNAM    EQU   40
OFLGS    EQU   48
BLKSI    EQU   62
LRECL    EQU   82
         SPACE 1                                                GP18035
         PRINT NOGEN                                            GP18035
         CVT   DSECT=YES
         SPACE 1
         YREGS ,                                                 SG1801
         END   ENTRY0
